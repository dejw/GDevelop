{"version":3,"file":"static/js/local-app.8a7c54bf.chunk.js","mappings":"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","sources":["JsExtensionsLoader/LocalJsExtensionsFinder.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","ResourcesList/LocalEmbeddedResourceSources.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","Utils/LocalUserInfo.js","Export/LocalExporters/LocalFileSystem.js","qr-creator.js","UI/QrCode.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalPreviewDebuggerServer.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Utils/TimeFunction.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalElectronExport.js","Export/LocalExporters/LocalHTML5Export.js","UI/LocalFilePicker/index.js","Utils/LocalArchiver.js","Export/LocalExporters/LocalFacebookInstantGamesExport.js","Export/LocalExporters/LocalFileUploader.js","Export/LocalExporters/LocalOnlineCordovaExport.js","Export/LocalExporters/LocalOnlineElectronExport.js","Export/LocalExporters/LocalOnlineWebExport.js","Export/LocalExporters/index.js","MainFrame/ElectronMainMenu.js","EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectOpener.js","UI/CustomSvgIcons/Computer.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectResourcesHandler.js","ProjectsStorage/LocalFileStorageProvider/index.js","GameEngineFinder/LocalGDJSDevelopmentWatcher.js","ProjectsStorage/LocalFileStorageProvider/LocalFileResourceMover.js","Utils/ProcessByChunk.js","Utils/LocalFileUploader.js","ProjectsStorage/ResourceMover/LocalResourceMover.js","ProjectsStorage/ResourceFetcher/LocalResourceFetcher.js","LocalApp.js"],"sourcesContent":["// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../GameEngineFinder/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples, onFindGDJS }) => {\n  return (onFindGDJS ? onFindGDJS() : findGDJS()).then(({ gdjsRoot }) => {\n    const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n    console.info(\n      `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n    );\n    return new Promise((resolve, reject) => {\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n  onFindGDJS?: ?() => Promise<{gdjsRoot: string}>\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n    onFindGDJS,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples, onFindGDJS }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { isPathInProjectFolder } from './ResourceUtils';\nimport { createNewResource } from './ResourceSource';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\n\nexport type EmbeddedResource = {|\n  resourceKind: string,\n  resourceName?: string,\n\n  /** The \"path\" to the embedded resource (e.g: a tileset) as stored in the parent resource (e.g: a tilemap). */\n  relPath: string,\n\n  /** The full path to the file of the embedded resource. */\n  fullPath: string,\n\n  /** True if the embedded resource file is outside the project folder. */\n  isOutsideProjectFolder: boolean,\n|};\n\nexport type EmbeddedResources = {|\n  hasAnyEmbeddedResourceOutsideProjectFolder: boolean,\n  embeddedResources: Map<string, EmbeddedResource>,\n|};\n\nexport type MappedResources = {|\n  mapping: { [key: string]: string },\n|};\n\ntype ParseEmbeddedFiles = (\n  project: gdProject,\n  filePath: string\n) => Promise<?EmbeddedResources>;\n\n/**\n * Copy the embedded resources inside the project folder\n */\nexport async function copyAllEmbeddedResourcesToProjectFolder(\n  project: gdProject,\n  filesWithEmbeddedResources: Map<string, EmbeddedResources>\n) {\n  if (!fs || !path) {\n    return;\n  }\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const copies = [];\n\n  for (const {\n    hasAnyEmbeddedResourceOutsideProjectFolder,\n    embeddedResources,\n  } of filesWithEmbeddedResources.values()) {\n    if (!hasAnyEmbeddedResourceOutsideProjectFolder) continue;\n\n    for (const embedded of embeddedResources.values()) {\n      if (!embedded.isOutsideProjectFolder) continue;\n\n      const resourceBasename = path.basename(embedded.fullPath);\n      const fileExtension = path.extname(resourceBasename);\n      const fileNameWithoutExtension = path.basename(\n        resourceBasename,\n        fileExtension\n      );\n\n      const newFileNameWithoutExtension = newNameGenerator(\n        fileNameWithoutExtension,\n        tentativeFileName => {\n          const tentativePath =\n            path.join(projectPath, tentativeFileName) + fileExtension;\n          return fs.existsSync(tentativePath);\n        }\n      );\n\n      const resourceNewPath = path.join(\n        projectPath,\n        newFileNameWithoutExtension + fileExtension\n      );\n\n      embedded.resourceName = newFileNameWithoutExtension + fileExtension;\n\n      copies.push(fs.promises.copyFile(embedded.fullPath, resourceNewPath));\n    }\n  }\n\n  return Promise.all(copies);\n}\n\n/**\n * Create the mapping between embedded resource path (e.g: path to a tileset) to its resource name (i.e: the name of\n * the resource containing the tileset).\n */\nexport function createAndMapEmbeddedResources(\n  project: gdProject,\n  filesWithEmbeddedResources: Map<string, EmbeddedResources>\n): Map<string, MappedResources> {\n  const projectPath = path.dirname(project.getProjectFile());\n\n  const filesWithMappedResources = new Map<string, MappedResources>();\n  for (const [filePath, { embeddedResources }] of filesWithEmbeddedResources) {\n    const mapping = {};\n    for (let {\n      resourceKind,\n      resourceName,\n      relPath,\n      fullPath,\n    } of embeddedResources.values()) {\n      if (!resourceName) {\n        resourceName = path.relative(projectPath, fullPath);\n      }\n\n      const theEmbeddedResource = createNewResource(resourceKind);\n      if (theEmbeddedResource) {\n        theEmbeddedResource.setName(resourceName);\n        theEmbeddedResource.setFile(resourceName);\n\n        mapping[relPath] = resourceName;\n\n        project.getResourcesManager().addResource(theEmbeddedResource);\n      }\n    }\n\n    filesWithMappedResources.set(filePath, {\n      mapping,\n    });\n  }\n\n  return filesWithMappedResources;\n}\n\n/**\n * List the embedded resources of a Tilemap (or JSON) resource.\n * Supports LDtk tilemaps.\n *\n * @param project The project\n * @param filePath The file path of a resource\n * @returns\n */\nexport async function listTileMapEmbeddedResources(\n  project: gdProject,\n  filePath: string\n): Promise<?EmbeddedResources> {\n  if (!fs || !path) {\n    return null;\n  }\n\n  const data = await fs.promises.readFile(filePath, 'utf8');\n  try {\n    const tileMap = JSON.parse(data);\n\n    // For LDtk tilemaps, read the tilesets.\n    if (tileMap && tileMap.__header__ && tileMap.__header__.app === 'LDtk') {\n      const dir = path.dirname(filePath);\n      const embeddedResources = new Map<string, EmbeddedResource>();\n      let hasAnyEmbeddedResourceOutsideProjectFolder = false;\n\n      for (const tileset of tileMap.defs.tilesets) {\n        if (tileset.relPath) {\n          const relPath = tileset.relPath;\n          const fullPath = path.resolve(dir, relPath);\n          const isOutsideProjectFolder = !isPathInProjectFolder(\n            project,\n            fullPath\n          );\n          const resource: EmbeddedResource = {\n            resourceKind: 'image',\n            relPath,\n            fullPath,\n            isOutsideProjectFolder,\n          };\n\n          embeddedResources.set(relPath, resource);\n\n          if (isOutsideProjectFolder)\n            hasAnyEmbeddedResourceOutsideProjectFolder = true;\n        }\n      }\n\n      for (const level of tileMap.levels) {\n        if (level.bgRelPath) {\n          const relPath = level.bgRelPath;\n          const fullPath = path.resolve(dir, relPath);\n          const isOutsideProjectFolder = !isPathInProjectFolder(\n            project,\n            fullPath\n          );\n          const resource: EmbeddedResource = {\n            resourceKind: 'image',\n            relPath,\n            fullPath,\n            isOutsideProjectFolder,\n          };\n\n          embeddedResources.set(level.bgRelPath, resource);\n\n          if (isOutsideProjectFolder)\n            hasAnyEmbeddedResourceOutsideProjectFolder = true;\n        }\n      }\n\n      return {\n        hasAnyEmbeddedResourceOutsideProjectFolder,\n        embeddedResources,\n      };\n    }\n  } catch (error) {\n    console.error(\n      `Unable to read properly the data from file ${filePath} for use as a tilemap - ignoring any potentially embedded resources.`\n    );\n    return null;\n  }\n}\n\nexport const embeddedResourcesParsers: { [string]: ParseEmbeddedFiles } = {\n  tilemap: listTileMapEmbeddedResources,\n  json: listTileMapEmbeddedResources,\n};\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  type ChooseResourceOptions,\n  type ChooseResourceProps,\n  type ResourceSourceComponentProps,\n  type ResourceSource,\n  allResourceKindsAndMetadata,\n} from './ResourceSource';\nimport { ResourceStore } from '../AssetStore/ResourceStore';\nimport { isPathInProjectFolder, copyAllToProjectFolder } from './ResourceUtils';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Window from '../Utils/Window';\nimport {\n  copyAllEmbeddedResourcesToProjectFolder,\n  embeddedResourcesParsers,\n  createAndMapEmbeddedResources,\n  type EmbeddedResources,\n  type MappedResources,\n} from './LocalEmbeddedResourceSources';\nimport { Line } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport { FileToCloudProjectResourceUploader } from './FileToCloudProjectResourceUploader';\n\nconst remote = optionalRequire('@electron/remote');\nconst dialog = remote ? remote.dialog : null;\nconst path = optionalRequire('path');\n\ntype ResourceStoreChooserProps = {\n  options: ChooseResourceOptions,\n  onChooseResources: (resources: Array<gdResource>) => void,\n  createNewResource: () => gdResource,\n};\n\nconst ResourceStoreChooser = ({\n  options,\n  onChooseResources,\n  createNewResource,\n}: ResourceStoreChooserProps) => {\n  return (\n    <ResourceStore\n      onChoose={resource => {\n        const chosenResourceUrl = resource.url;\n        const newResource = createNewResource();\n        newResource.setFile(chosenResourceUrl);\n        newResource.setName(path.basename(chosenResourceUrl));\n        newResource.setOrigin('gdevelop-asset-store', chosenResourceUrl);\n\n        onChooseResources([newResource]);\n      }}\n      resourceKind={options.resourceKind}\n    />\n  );\n};\n\nconst localResourceSources: Array<ResourceSource> = [\n  // Have the local resource sources first, so they are used by default/shown first when\n  // the project is saved locally.\n  ...allResourceKindsAndMetadata.map(\n    ({ kind, displayName, fileExtensions, createNewResource }) => {\n      const selectLocalFileResources = async ({\n        i18n,\n        getLastUsedPath,\n        setLastUsedPath,\n        project,\n        options,\n      }: ChooseResourceProps) => {\n        if (!dialog)\n          throw new Error('Electron dialog not supported in this environment.');\n\n        const properties = ['openFile'];\n        if (options.multiSelection) properties.push('multiSelections');\n\n        const projectPath = path.dirname(project.getProjectFile());\n        const latestPath = getLastUsedPath(project, kind) || projectPath;\n\n        const browserWindow = remote.getCurrentWindow();\n        let { filePaths } = await dialog.showOpenDialog(browserWindow, {\n          title: i18n._(t`Choose a file`),\n          properties,\n          filters: [\n            { name: i18n._(t`Supported files`), extensions: fileExtensions },\n          ],\n          defaultPath: latestPath,\n        });\n        if (!filePaths || !filePaths.length) return [];\n\n        const lastUsedPath = path.parse(filePaths[0]).dir;\n        setLastUsedPath(project, kind, lastUsedPath);\n\n        let hasFilesOutsideProjectFolder = filePaths.some(\n          path => !isPathInProjectFolder(project, path)\n        );\n\n        // Some resources, like tilemaps, can have references to other files.\n        // We parse these files, optionally copy them, then create a mapping from the previous file name\n        // as written inside the tilemap to the name of the resource that is representing this file.\n        const filesWithEmbeddedResources = new Map<string, EmbeddedResources>();\n        const parseEmbeddedResources = embeddedResourcesParsers[kind];\n        if (parseEmbeddedResources) {\n          for (const filePath of filePaths) {\n            const embeddedResources = await parseEmbeddedResources(\n              project,\n              filePath\n            );\n\n            if (embeddedResources) {\n              filesWithEmbeddedResources.set(filePath, embeddedResources);\n\n              if (embeddedResources.hasAnyEmbeddedResourceOutsideProjectFolder)\n                hasFilesOutsideProjectFolder = true;\n            }\n          }\n        }\n\n        // Check if files should be copied in the project folder.\n        const newToOldFilePaths = new Map<string, string>();\n        let filesWithMappedResources = new Map<string, MappedResources>();\n        if (hasFilesOutsideProjectFolder) {\n          const answer = Window.showConfirmDialog(\n            i18n._(\n              t`This/these file(s) are outside the project folder. Would you like to make a copy of them in your project folder first (recommended)?`\n            )\n          );\n\n          if (answer) {\n            filePaths = await copyAllToProjectFolder(\n              project,\n              filePaths,\n              newToOldFilePaths\n            );\n\n            await copyAllEmbeddedResourcesToProjectFolder(\n              project,\n              filesWithEmbeddedResources\n            );\n          }\n        }\n\n        // In case of resources embedded inside others,\n        // create a mapping from the file name\n        // as written inside the resource (e.g: the tilemap)\n        // to the name of the resource that was created to\n        // represent this file.\n        filesWithMappedResources = createAndMapEmbeddedResources(\n          project,\n          filesWithEmbeddedResources\n        );\n\n        return filePaths.map(filePath => {\n          const newResource = createNewResource();\n          newResource.setFile(path.relative(projectPath, filePath));\n          newResource.setName(path.relative(projectPath, filePath));\n\n          const filePathWithMapping = newToOldFilePaths.has(filePath)\n            ? newToOldFilePaths.get(filePath)\n            : filePath;\n          if (filePathWithMapping) {\n            const mappedResources = filesWithMappedResources.get(\n              filePathWithMapping\n            );\n\n            if (mappedResources && mappedResources.mapping) {\n              newResource.setMetadata(\n                JSON.stringify({\n                  embeddedResourcesMapping: mappedResources.mapping,\n                })\n              );\n            }\n          }\n\n          return newResource;\n        });\n      };\n\n      return {\n        name: 'local-file-opener-' + kind,\n        displayName: t`Choose a file`,\n        displayTab: 'import',\n        onlyForStorageProvider: 'LocalFile',\n        kind,\n        selectResourcesHeadless: selectLocalFileResources,\n        renderComponent: (props: ResourceSourceComponentProps) => (\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              primary\n              label={\n                props.options.multiSelection ? (\n                  <Trans>Choose one or more files</Trans>\n                ) : (\n                  <Trans>Choose a file</Trans>\n                )\n              }\n              onClick={async () => {\n                const resources = await selectLocalFileResources({\n                  i18n: props.i18n,\n                  project: props.project,\n                  fileMetadata: props.fileMetadata,\n                  getStorageProvider: props.getStorageProvider,\n                  getLastUsedPath: props.getLastUsedPath,\n                  setLastUsedPath: props.setLastUsedPath,\n                  options: props.options,\n                });\n\n                props.onChooseResources(resources);\n              }}\n            />\n          </Line>\n        ),\n      };\n    }\n  ),\n  ...allResourceKindsAndMetadata.map(({ kind, createNewResource }) => ({\n    name: `upload-${kind}`,\n    displayName: t`File(s) from your device`,\n    displayTab: 'import',\n    onlyForStorageProvider: 'Cloud',\n    kind,\n    renderComponent: (props: ResourceSourceComponentProps) => (\n      <FileToCloudProjectResourceUploader\n        createNewResource={createNewResource}\n        onChooseResources={props.onChooseResources}\n        options={props.options}\n        fileMetadata={props.fileMetadata}\n        getStorageProvider={props.getStorageProvider}\n        key={`url-chooser-${kind}`}\n        automaticallyOpenInput={!!props.automaticallyOpenIfPossible}\n      />\n    ),\n  })),\n  ...allResourceKindsAndMetadata.map(({ kind, createNewResource }) => ({\n    name: `resource-store-${kind}`,\n    displayName: t`Choose from asset store`,\n    displayTab: 'standalone',\n    kind,\n    renderComponent: (props: ResourceSourceComponentProps) => (\n      <ResourceStoreChooser\n        createNewResource={createNewResource}\n        onChooseResources={props.onChooseResources}\n        options={props.options}\n        key={`resource-store-${kind}`}\n      />\n    ),\n  })),\n];\n\nexport default localResourceSources;\n","// @flow\nimport {\n  type ResourceExternalEditor,\n  type ExternalEditorInput,\n  type ExternalEditorOutput,\n  type ExternalEditorBase64Resource,\n  type EditWithExternalEditorOptions,\n  readMetadata,\n  saveBlobUrlsFromExternalEditorBase64Resources,\n  freeBlobsAndUpdateMetadata,\n  patchExternalEditorMetadataWithResourcesNamesIfNecessary,\n} from './ResourceExternalEditor';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\nimport { t } from '@lingui/macro';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { isBlobURL, isURL } from './ResourceUtils';\nimport {\n  convertBlobToDataURL,\n  downloadUrlsToBlobs,\n  type ItemResult,\n} from '../Utils/BlobDownloader';\nimport { type ResourceKind } from './ResourceSource';\n\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\n/**\n * Ask Electron main process to open a window for the specified editor,\n * then wait for the editor to be closed and pass the results.\n */\nconst openAndWaitForExternalEditorWindow = async (\n  editorName: 'piskel' | 'yarn' | 'jfxr',\n  externalEditorInput: ExternalEditorInput\n): Promise<?ExternalEditorOutput> => {\n  if (!ipcRenderer) throw new Error('Not supported.');\n\n  const externalEditorOutput = await ipcRenderer.invoke(\n    `${editorName}-load`,\n    externalEditorInput\n  );\n  return externalEditorOutput;\n};\n\n/**\n * Download (or read locally) resources and prepare them to be edited\n * by an external editor.\n */\nexport const downloadAndPrepareExternalEditorBase64Resources = async ({\n  project,\n  resourceNames,\n}: {|\n  project: gdProject,\n  resourceNames: Array<string>,\n|}): Promise<Array<ExternalEditorBase64Resource>> => {\n  type ResourceToDownload = {|\n    resourceName: string,\n    url: string,\n  |};\n\n  type ResourceToReadLocally = {|\n    resourceName: string,\n    localFilePath: string,\n  |};\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const urlsToDownload: Array<ResourceToDownload> = [];\n  const filesToRead: Array<ResourceToReadLocally> = [];\n  const resourcesManager = project.getResourcesManager();\n  resourceNames.forEach(resourceName => {\n    if (!resourcesManager.hasResource(resourceName)) return;\n\n    const resource = resourcesManager.getResource(resourceName);\n    const url = resource.getFile();\n    if (isURL(url)) {\n      if (isBlobURL(url)) {\n        console.error('Unsupported blob URL for a resource - ignoring it.');\n      } else {\n        urlsToDownload.push({\n          url,\n          resourceName,\n        });\n      }\n    } else {\n      // This resource is a local file.\n      filesToRead.push({\n        localFilePath: url,\n        resourceName,\n      });\n    }\n  });\n\n  const downloadedBlobs: Array<\n    ItemResult<ResourceToDownload>\n  > = await downloadUrlsToBlobs({\n    urlContainers: urlsToDownload,\n    onProgress: (count, total) => {},\n  });\n\n  const resourcesToDataUrl = new Map<\n    string,\n    {|\n      dataUrl: string,\n      localFilePath?: string,\n    |}\n  >();\n  await Promise.all(\n    downloadedBlobs.map(async ({ error, blob, item }) => {\n      if (blob) {\n        try {\n          resourcesToDataUrl.set(item.resourceName, {\n            dataUrl: await convertBlobToDataURL(blob),\n          });\n        } catch (error) {\n          console.error(\n            `Unable to read data from resource \"${\n              item.resourceName\n            }\" - ignoring it.`,\n            error\n          );\n        }\n      }\n    })\n  );\n  await Promise.all(\n    filesToRead.map(async ({ localFilePath, resourceName }) => {\n      try {\n        const content = await fs.promises.readFile(\n          path.resolve(projectPath, localFilePath)\n        );\n\n        resourcesToDataUrl.set(resourceName, {\n          localFilePath,\n          dataUrl: 'data:text/plain;base64,' + content.toString('base64'),\n        });\n      } catch (error) {\n        console.error(\n          `Unable to read local file \"${localFilePath}\" - ignoring it.`,\n          error\n        );\n      }\n    })\n  );\n\n  return resourceNames.map(resourceName => {\n    const resourceData = resourcesToDataUrl.get(resourceName);\n    if (!resourceData)\n      return {\n        name: resourceName,\n        dataUrl: '',\n      };\n\n    const { localFilePath, dataUrl } = resourceData;\n    return {\n      name: resourceName,\n      dataUrl,\n      localFilePath,\n    };\n  });\n};\n\n/**\n * Edit one or more resources with the specified external editor.\n */\nconst editWithLocalExternalEditor = async ({\n  externalEditorName,\n  defaultName,\n  metadataKey,\n  resourceKind,\n  options,\n}: {|\n  externalEditorName: 'piskel' | 'yarn' | 'jfxr',\n  defaultName: string,\n  metadataKey: string,\n  resourceKind: ResourceKind,\n  options: EditWithExternalEditorOptions,\n|}) => {\n  const { project, resourceNames, resourceManagementProps } = options;\n\n  // Fetch all edited resources as base64 encoded \"data urls\" (`data:...`).\n  const resources = await downloadAndPrepareExternalEditorBase64Resources({\n    project,\n    resourceNames,\n  });\n\n  // Open the external editor, passing the resources with the data urls.\n  const externalEditorInput: ExternalEditorInput = {\n    singleFrame: options.extraOptions.singleFrame,\n    externalEditorData: readMetadata(\n      metadataKey,\n      options.extraOptions.existingMetadata\n    ),\n    fps: options.extraOptions.fps,\n    isLooping: options.extraOptions.isLooping,\n    name: options.extraOptions.name || resourceNames[0] || defaultName,\n    resources,\n  };\n  sendExternalEditorOpened(externalEditorName);\n  const externalEditorOutput: ?ExternalEditorOutput = await openAndWaitForExternalEditorWindow(\n    externalEditorName,\n    externalEditorInput\n  );\n  if (!externalEditorOutput) return null; // Changes cancelled.\n\n  // Save the edited files back to the GDevelop resources, as \"blob urls\" (blob:...)\n  // which can then uploaded or saved locally.\n  const modifiedResources = await saveBlobUrlsFromExternalEditorBase64Resources(\n    {\n      baseNameForNewResources: externalEditorOutput.baseNameForNewResources,\n      project,\n      resources: externalEditorOutput.resources,\n      resourceKind,\n    }\n  );\n\n  // Ask the project to persist the resources (\"blob urls\" will be either uploaded\n  // or saved locally).\n  try {\n    await resourceManagementProps.onFetchNewlyAddedResources();\n  } catch (error) {\n    console.error(\n      'An error happened while fetching the newly added resources:',\n      error\n    );\n  }\n\n  // Free the \"blob urls\" so that blobs don't stay in memory! They are only temporarily\n  // useful while waiting for an upload/local file save.\n  freeBlobsAndUpdateMetadata({\n    modifiedResources,\n    metadataKey,\n    metadata: options.extraOptions.singleFrame\n      ? externalEditorOutput.externalEditorData\n      : null,\n  });\n\n  // Some editors (Piskel) need to have resource names persisted.\n  patchExternalEditorMetadataWithResourcesNamesIfNecessary(\n    modifiedResources.map(({ resource }) => resource.getName()),\n    externalEditorOutput.externalEditorData\n  );\n\n  return {\n    resources: modifiedResources.map(({ resource, originalIndex }) => ({\n      name: resource.getName(),\n      originalIndex,\n    })),\n    newName: externalEditorOutput.baseNameForNewResources,\n    newMetadata: { [metadataKey]: externalEditorOutput.externalEditorData },\n  };\n};\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    createDisplayName: t`Create with Piskel`,\n    editDisplayName: t`Edit with Piskel`,\n    kind: 'image',\n    edit: async options => {\n      return await editWithLocalExternalEditor({\n        options,\n        externalEditorName: 'piskel',\n        defaultName: 'New image',\n        metadataKey: 'pskl',\n        resourceKind: 'image',\n      });\n    },\n  },\n  {\n    name: 'Jfxr',\n    createDisplayName: t`Create with Jfxr`,\n    editDisplayName: t`Edit with Jfxr`,\n    kind: 'audio',\n    edit: async options => {\n      return await editWithLocalExternalEditor({\n        options,\n        externalEditorName: 'jfxr',\n        defaultName: 'New sound effect',\n        metadataKey: 'jfxr',\n        resourceKind: 'audio',\n      });\n    },\n  },\n  {\n    name: 'Yarn',\n    createDisplayName: t`Create with Yarn`,\n    editDisplayName: t`Edit with Yarn`,\n    kind: 'json',\n    edit: async options => {\n      return await editWithLocalExternalEditor({\n        options,\n        externalEditorName: 'yarn',\n        defaultName: 'New dialogue tree',\n        metadataKey: 'yarn',\n        resourceKind: 'json',\n      });\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from './OptionalRequire';\nconst os = optionalRequire('os');\n\nexport const getUID = () => {\n  try {\n    return os.userInfo().uid;\n  } catch (e) {\n    return '';\n  }\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { getUID } from '../../Utils/LocalUserInfo';\nimport { isURL } from '../../ResourcesList/ResourceUtils';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\n\nconst gd: libGDevelop = global.gd;\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\n// For some reason, `path.posix` is undefined when packaged\n// with webpack, so we're using `path` directly. As it's for the web-app,\n// it should always be the posix version. In tests on Windows,\n// it's necessary to use path.posix.\n// Search for \"pathPosix\" in the codebase for other places where this is used.\nconst pathPosix = path.posix || path;\n\n/**\n * Gives access to the local filesystem, but returns paths\n * that are using \"/\" as a path separator, even on Windows\n * (so that in exported games, paths are slashs, which is\n * supported everywhere).\n */\nclass LocalFileSystem {\n  /**\n   * True if URLs should be downloaded (useful for an export, but not for a preview).\n   * @private\n   */\n  _downloadUrlsToLocalFiles: boolean;\n\n  /**\n   * Store all the files that should be downloaded (filepath => url)\n   * @private\n   */\n  _filesToDownload: { [string]: string } = {};\n\n  constructor(\n    options: ?{|\n      downloadUrlsToLocalFiles: boolean,\n    |}\n  ) {\n    this._downloadUrlsToLocalFiles =\n      !!options && options.downloadUrlsToLocalFiles;\n  }\n\n  /**\n   * Returns all the files that should be downloaded from a URL, with the specified destination path prefix.\n   */\n  getAllUrlFilesIn = (pathPrefix: string): Array<UrlFileDescriptor> => {\n    // Ensure the path prefix we're searching the files in is normalized,\n    // because everything that we stored was normalized. If we don't do this,\n    // we risk missing files on Windows (as pathPrefix can contain backslashes).\n    const normalizedPathPrefix = pathPosix\n      .normalize(pathPrefix)\n      .replace(/\\\\/g, '/');\n\n    return Object.keys(this._filesToDownload)\n      .filter(filePath => filePath.indexOf(normalizedPathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        url: this._filesToDownload[filePath],\n      }));\n  };\n\n  mkDir = (path: string) => {\n    if (isURL(path)) {\n      // URLs are always assumed to exist.\n      return;\n    }\n\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.error('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  };\n  dirExists = (path: string) => {\n    if (isURL(path)) {\n      // URLs are always assumed to exist.\n      return true;\n    }\n\n    return fs.existsSync(path);\n  };\n  clearDir = (path: string) => {\n    try {\n      fs.emptyDirSync(path);\n    } catch (e) {\n      console.error('clearDir(' + path + ') failed: ' + e);\n    }\n  };\n  getTempDir = () => {\n    return path.join(os.tmpdir(), `GDTMP-${getUID()}`);\n  };\n  fileNameFrom = (fullPath: string) => {\n    // If URLs are not downloaded, then filenames are not changed.\n    if (!this._downloadUrlsToLocalFiles && isURL(fullPath)) return fullPath;\n\n    return path.basename(fullPath);\n  };\n  dirNameFrom = (fullPath: string) => {\n    return path.dirname(fullPath).replace(/\\\\/g, '/');\n  };\n  makeAbsolute = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path\n      .resolve(baseDirectory, path.normalize(filename))\n      .replace(/\\\\/g, '/');\n  };\n  makeRelative = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    return path\n      .relative(baseDirectory, path.normalize(filename))\n      .replace(/\\\\/g, '/');\n  };\n  isAbsolute = (fullPath: string) => {\n    if (isURL(fullPath)) return true;\n\n    if (fullPath.length === 0) return true;\n    return (\n      (fullPath.length > 0 && fullPath.charAt(0) === '/') ||\n      (fullPath.length > 1 && fullPath.charAt(1) === ':')\n    );\n  };\n  copyFile = (source: string, dest: string) => {\n    if (isURL(source)) {\n      // If URLs are not downloaded, then there is nothing to copy.\n      if (!this._downloadUrlsToLocalFiles) return true;\n\n      if (isURL(dest)) {\n        console.error(\n          `Destination can't be a URL in copyFile (from ${source} to ${dest}).`\n        );\n        return false;\n      }\n\n      this._filesToDownload[pathPosix.normalize(dest)] = source;\n      return true;\n    }\n\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.error('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  };\n  writeToFile = (file: string, contents: string) => {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.error('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  };\n  readFile = (file: string) => {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.error('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  };\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.error('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  };\n  fileExists = (filePath: string) => {\n    // Check if a file WILL exists once downloaded.\n    const normalizedFilePath = pathPosix.normalize(filePath);\n    const shouldTheFileBeDownloaded = !!this._filesToDownload[\n      normalizedFilePath\n    ];\n    if (shouldTheFileBeDownloaded) {\n      return true;\n    }\n\n    // Check if a local file exists.\n    try {\n      const stat = fs.statSync(filePath);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  };\n}\n\nexport default LocalFileSystem;\n",null,"// @flow\n\nimport * as React from 'react';\nimport QrCreator from 'qr-creator';\nimport GDevelopThemeContext from './Theme/GDevelopThemeContext';\n\ntype Props = {|\n  url: string,\n  size?: number,\n|};\n\nconst QrCode = ({ url, size = 128 }: Props) => {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  React.useEffect(\n    () => {\n      const containerElement = containerRef.current;\n\n      if (!containerElement) return;\n\n      QrCreator.render(\n        {\n          text: url,\n          radius: 0,\n          // See https://www.qrcode.com/en/about/error_correction.html.\n          // The lower the level, the smaller the image. We don't need high level\n          // because it won't be damaged.\n          ecLevel: 'L',\n          fill: gdevelopTheme.palette.secondary,\n          background: null, // color or null for transparent\n          size, // in pixels\n        },\n        containerElement\n      );\n      return () => {\n        if (containerElement.firstChild) {\n          containerElement.removeChild(containerElement.firstChild);\n        }\n      };\n    },\n    [url, size, gdevelopTheme]\n  );\n  return <div ref={containerRef} />;\n};\n\nexport default QrCode;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport Text from '../../../UI/Text';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\nimport ShareLink from '../../../UI/ShareDialog/ShareLink';\nimport QrCode from '../../../UI/QrCode';\n\ntype Props = {|\n  open: boolean,\n  /**\n   * url without protocol, for example '192.168.1.16:2929'\n   */\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nconst LocalNetworkPreviewDialog = ({\n  url,\n  open,\n  error,\n  onExport,\n  onClose,\n  onRunPreviewLocally,\n}: Props) => {\n  if (!open) return null;\n  const urlWithProtocol = url ? `http://${url}` : '';\n\n  return (\n    <Dialog\n      title={<Trans>Preview</Trans>}\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary\n          onClick={onClose}\n        />,\n      ]}\n      secondaryActions={[\n        onExport && (\n          <FlatButton\n            key=\"export\"\n            label={<Trans>Export game</Trans>}\n            onClick={onExport}\n          />\n        ),\n        <FlatButton\n          key=\"run-preview-locally\"\n          label={<Trans>Run on this computer</Trans>}\n          onClick={onRunPreviewLocally}\n        />,\n      ]}\n      open={open}\n      onRequestClose={onClose}\n      maxWidth=\"sm\"\n    >\n      {error && (\n        <Line>\n          <Text>\n            <Trans>\n              Unable to start the server for the preview! Make sure that you are\n              authorized to run servers on this computer. Otherwise, use classic\n              preview to test your game.\n            </Trans>\n          </Text>\n        </Line>\n      )}\n      {!error && !url && <PlaceholderLoader />}\n      {!error && url && (\n        <div>\n          <Line>\n            <Text>\n              <Trans>\n                Your preview is ready! On your mobile or tablet, open your\n                browser and enter in the address bar:\n              </Trans>\n            </Text>\n          </Line>\n          <ShareLink url={url} />\n          {urlWithProtocol && (\n            <>\n              <Line>\n                <Text>\n                  <Trans>Or flash this QR code:</Trans>\n                </Text>\n              </Line>\n              <Line justifyContent=\"center\">\n                <QrCode url={urlWithProtocol} size={100} />\n              </Line>\n            </>\n          )}\n          <Line>\n            <Text>\n              <Trans>\n                Please note that your device should be connected on the same\n                network as this computer.\n              </Trans>\n            </Text>\n          </Line>\n        </div>\n      )}\n    </Dialog>\n  );\n};\n\nexport default LocalNetworkPreviewDialog;\n","// @flow\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport {\n  type PreviewDebuggerServerCallbacks,\n  type PreviewDebuggerServer,\n  type DebuggerId,\n  type ServerAddress,\n} from '../../PreviewLauncher.flow';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\nlet debuggerServerState: 'started' | 'stopped' = 'stopped';\nlet debuggerServerAddress: ?ServerAddress = null;\nconst callbacksList: Array<PreviewDebuggerServerCallbacks> = [];\nconst debuggerIds: Array<DebuggerId> = [];\n\nconst removeServerListeners = () => {\n  if (!ipcRenderer) return;\n\n  ipcRenderer.removeAllListeners('debugger-send-message-done');\n  ipcRenderer.removeAllListeners('debugger-error-received');\n  ipcRenderer.removeAllListeners('debugger-connection-closed');\n  ipcRenderer.removeAllListeners('debugger-connection-opened');\n  ipcRenderer.removeAllListeners('debugger-connection-errored');\n  ipcRenderer.removeAllListeners('debugger-start-server-done');\n  ipcRenderer.removeAllListeners('debugger-message-received');\n};\n\n/**\n * A debugger server implemented using Electron (this one is just a bridge to it,\n * communicating through events with it).\n */\nexport const localPreviewDebuggerServer: PreviewDebuggerServer = {\n  startServer: () => {\n    if (!ipcRenderer) return Promise.reject();\n    if (debuggerServerState === 'started') return Promise.resolve();\n\n    const serverStartPromise = new Promise((resolve, reject) => {\n      let serverStartPromiseCompleted = false;\n      debuggerServerState = 'stopped';\n      debuggerServerAddress = null;\n      removeServerListeners();\n\n      ipcRenderer.on('debugger-error-received', (event, err) => {\n        if (!serverStartPromiseCompleted) {\n          reject(err);\n          serverStartPromiseCompleted = true;\n        }\n\n        callbacksList.forEach(({ onErrorReceived }) => onErrorReceived(err));\n      });\n\n      ipcRenderer.on('debugger-connection-closed', (event, { id }) => {\n        const debuggerIdIndex = debuggerIds.indexOf(id);\n        if (debuggerIdIndex !== -1) debuggerIds.splice(debuggerIdIndex, 1);\n\n        callbacksList.forEach(({ onConnectionClosed }) =>\n          onConnectionClosed({\n            id,\n            debuggerIds,\n          })\n        );\n      });\n\n      ipcRenderer.on('debugger-connection-opened', (event, { id }) => {\n        debuggerIds.push(id);\n        callbacksList.forEach(({ onConnectionOpened }) =>\n          onConnectionOpened({\n            id,\n            debuggerIds,\n          })\n        );\n      });\n\n      ipcRenderer.on(\n        'debugger-connection-errored',\n        (event, { id, errorMessage }) => {\n          callbacksList.forEach(({ onConnectionErrored }) =>\n            onConnectionErrored({\n              id,\n              errorMessage,\n            })\n          );\n        }\n      );\n\n      ipcRenderer.on('debugger-start-server-done', (event, { address }) => {\n        console.info('Local preview debugger started');\n        debuggerServerState = 'started';\n        debuggerServerAddress = address;\n        if (!serverStartPromiseCompleted) {\n          resolve();\n          serverStartPromiseCompleted = true;\n        }\n\n        callbacksList.forEach(({ onServerStateChanged }) =>\n          onServerStateChanged()\n        );\n      });\n\n      ipcRenderer.on('debugger-message-received', (event, { id, message }) => {\n        console.info('Processing message received for debugger');\n        try {\n          const parsedMessage = JSON.parse(message);\n          callbacksList.forEach(({ onHandleParsedMessage }) =>\n            onHandleParsedMessage({ id, parsedMessage })\n          );\n        } catch (e) {\n          console.warn(\n            'Error while parsing message received from debugger client:',\n            e\n          );\n        }\n      });\n      ipcRenderer.send('debugger-start-server');\n    });\n\n    // Consider the start of the server as a failure if not completed/errored\n    // after 5s.\n    const serverStartTimeoutPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(\n          new Error(\n            'Debugger server not started or errored after 5s - aborting.'\n          )\n        );\n      }, 5000);\n    });\n    return Promise.race([serverStartPromise, serverStartTimeoutPromise]);\n  },\n  sendMessage: (id: DebuggerId, message: Object) => {\n    if (!ipcRenderer) return;\n    if (debuggerServerState === 'stopped') {\n      console.error('Cannot send message when debugger server is stopped.');\n      return;\n    }\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: JSON.stringify(message),\n    });\n  },\n  getServerState: () => debuggerServerState,\n  getExistingDebuggerIds: () => debuggerIds,\n  registerCallbacks: (callbacks: PreviewDebuggerServerCallbacks) => {\n    callbacksList.push(callbacks);\n\n    return () => {\n      const callbacksIndex = callbacksList.indexOf(callbacks);\n      if (callbacksIndex !== -1) callbacksList.splice(callbacksIndex, 1);\n    };\n  },\n};\n\nexport const getDebuggerServerAddress = (): ?ServerAddress =>\n  debuggerServerAddress;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport LocalFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../../../GameEngineFinder/LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport SubscriptionChecker, {\n  type SubscriptionCheckerInterface,\n} from '../../../Profile/Subscription/SubscriptionChecker';\nimport {\n  getDebuggerServerAddress,\n  localPreviewDebuggerServer,\n} from './LocalPreviewDebuggerServer';\nimport Window from '../../../Utils/Window';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  getIncludeFileHashs: () => { [string]: number },\n  onExport?: () => void,\n|};\n\ntype State = {|\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  hotReloadsCount: number,\n  previewGamePath: ?string,\n  previewBrowserWindowOptions: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n  hideMenuBar: boolean,\n  alwaysOnTop: boolean,\n|};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n  canDoHotReload = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    previewBrowserWindowOptions: null,\n    hotReloadsCount: 0,\n    hideMenuBar: true,\n    alwaysOnTop: true,\n  };\n  _networkPreviewSubscriptionChecker: ?SubscriptionCheckerInterface = null;\n  _hotReloadSubscriptionChecker: ?SubscriptionCheckerInterface = null;\n\n  _openPreviewBrowserWindow = () => {\n    const { previewGamePath, previewBrowserWindowOptions } = this.state;\n    if (!previewBrowserWindowOptions || !previewGamePath) return;\n\n    if (!ipcRenderer) return;\n\n    ipcRenderer.invoke('preview-open', {\n      previewBrowserWindowOptions,\n      previewGameIndexHtmlPath: `file://${previewGamePath}/index.html`,\n      alwaysOnTop: this.state.alwaysOnTop,\n      hideMenuBar: this.state.hideMenuBar,\n    });\n  };\n\n  closePreview = (windowId: number) => {\n    if (!ipcRenderer) return;\n    ipcRenderer.invoke('preview-close', { windowId });\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowOptions: {\n          width: project.getGameResolutionWidth(),\n          height: project.getGameResolutionHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n          webPreferences: {\n            webSecurity: false, // Allow to access to local files,\n            // Allow Node.js API access in renderer process, as long\n            // as we've not removed dependency on it and on \"@electron/remote\".\n            nodeIntegration: true,\n            contextIsolation: false,\n          },\n        },\n        previewGamePath: gamePath,\n        hideMenuBar: !options.getIsMenuBarHiddenInPreview(),\n        alwaysOnTop: options.getIsAlwaysOnTopInPreview(),\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscriptionForNetworkPreview());\n          });\n          ipcRenderer.on('local-network-ip', (event, ipAddress) => {\n            this.setState({\n              networkPreviewHost: ipAddress,\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ip');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<{|\n    outputDir: string,\n    exporter: gdjsExporter,\n    gdjsRoot: string,\n  |}> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: false,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        outputDir,\n        exporter,\n        gdjsRoot,\n      };\n    });\n  };\n\n  launchPreview = (previewOptions: PreviewOptions): Promise<any> => {\n    const { project, layout, externalLayout } = previewOptions;\n\n    // Start the debugger server for previews. Even if not used,\n    // useful if the user opens the Debugger editor later, or want to\n    // hot reload.\n    return this.getPreviewDebuggerServer()\n      .startServer()\n      .catch(err => {\n        // Ignore any error when running the debugger server - the preview\n        // can still work without it.\n        console.error(\n          'Unable to start the Debugger Server for the preview:',\n          err\n        );\n      })\n      .then(() => this._prepareExporter())\n      .then(({ outputDir, exporter, gdjsRoot }) => {\n        timeFunction(\n          () => {\n            const previewExportOptions = new gd.PreviewExportOptions(\n              project,\n              outputDir\n            );\n            previewExportOptions.setIsDevelopmentEnvironment(Window.isDev());\n            previewExportOptions.setLayoutName(layout.getName());\n            if (externalLayout) {\n              previewExportOptions.setExternalLayoutName(\n                externalLayout.getName()\n              );\n            }\n\n            const previewDebuggerServerAddress = getDebuggerServerAddress();\n            if (previewDebuggerServerAddress) {\n              previewExportOptions.useWebsocketDebuggerClientWithServerAddress(\n                previewDebuggerServerAddress.address,\n                '' + previewDebuggerServerAddress.port\n              );\n            }\n\n            const includeFileHashs = this.props.getIncludeFileHashs();\n            for (const includeFile in includeFileHashs) {\n              const hash = includeFileHashs[includeFile];\n              previewExportOptions.setIncludeFileHash(includeFile, hash);\n            }\n\n            // Give the preview the path to the \"@electron/remote\" module of the editor,\n            // as this is required by some features and we've not removed dependency\n            // on \"@electron/remote\" yet.\n            previewExportOptions.setElectronRemoteRequirePath(\n              path.join(\n                gdjsRoot,\n                '../preview_node_modules',\n                '@electron/remote',\n                'renderer/index.js'\n              )\n            );\n\n            const debuggerIds = this.getPreviewDebuggerServer().getExistingDebuggerIds();\n            const shouldHotReload =\n              previewOptions.hotReload && !!debuggerIds.length;\n\n            previewExportOptions.setProjectDataOnlyExport(\n              // Only export project data if asked and if a hot-reloading is being done.\n              shouldHotReload && previewOptions.projectDataOnlyExport\n            );\n\n            previewExportOptions.setFullLoadingScreen(\n              previewOptions.fullLoadingScreen\n            );\n\n            if (previewOptions.fallbackAuthor) {\n              previewExportOptions.setFallbackAuthor(\n                previewOptions.fallbackAuthor.id,\n                previewOptions.fallbackAuthor.username\n              );\n            }\n\n            exporter.exportProjectForPixiPreview(previewExportOptions);\n            previewExportOptions.delete();\n            exporter.delete();\n\n            if (shouldHotReload) {\n              debuggerIds.forEach(debuggerId => {\n                this.getPreviewDebuggerServer().sendMessage(debuggerId, {\n                  command: 'hotReload',\n                });\n              });\n\n              if (\n                this.state.hotReloadsCount % 16 === 0 &&\n                this._hotReloadSubscriptionChecker\n              ) {\n                this._hotReloadSubscriptionChecker.checkUserHasSubscription();\n              }\n              this.setState(state => ({\n                hotReloadsCount: state.hotReloadsCount + 1,\n              }));\n            } else {\n              this._openPreviewWindow(project, outputDir, previewOptions);\n            }\n          },\n          time => console.info(`Preview took ${time}ms`)\n        );\n      });\n  };\n\n  getPreviewDebuggerServer() {\n    return localPreviewDebuggerServer;\n  }\n\n  _checkSubscriptionForNetworkPreview = () => {\n    if (!this._networkPreviewSubscriptionChecker) return true;\n\n    return this._networkPreviewSubscriptionChecker.checkUserHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._networkPreviewSubscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() =>\n            this.setState({ networkPreviewDialogOpen: false })\n          }\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._hotReloadSubscriptionChecker = subscriptionChecker)\n          }\n          id=\"Hot reloading\"\n          title={\n            <Trans>Live preview (apply changes to the running preview)</Trans>\n          }\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\n\nexport const timeFunction = (fn: Function, onResult: number => void) => {\n  var t0 = performance.now();\n  fn();\n  var t1 = performance.now();\n  onResult(t1 - t0);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n|};\n\ntype ExportOutput = {|\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cordova',\n  packageNameWarningType: 'mobile',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  isNavigationDisabled: () => false,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n            project.setLastCompilationDirectory(outputDir);\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        localFileSystem,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      context.exportState.outputDir\n    );\n    exportOptions.setTarget('cordova');\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      urlFiles: localFileSystem.getAllUrlFilesIn(context.exportState.outputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return null;\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openPath(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n|};\n\ntype ExportOutput = {|\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-electron',\n  packageNameWarningType: 'desktop',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  isNavigationDisabled: () => false,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n            project.setLastCompilationDirectory(outputDir);\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        localFileSystem,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      context.exportState.outputDir\n    );\n    exportOptions.setTarget('electron');\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      urlFiles: localFileSystem.getAllUrlFilesIn(context.exportState.outputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return null;\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openPath(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n|};\n\ntype ExportOutput = {|\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-html5',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  isNavigationDisabled: () => false,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n            project.setLastCompilationDirectory(outputDir);\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        localFileSystem,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      context.exportState.outputDir\n    );\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      urlFiles: localFileSystem.getAllUrlFilesIn(context.exportState.outputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return null;\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openPath(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => openExportFolder()}\n            label={<Trans>Open the exported game folder</Trans>}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../TextField';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport FlatButton from '../FlatButton';\nconst electron = optionalRequire('electron');\nconst remote = optionalRequire('@electron/remote');\nconst dialog = remote ? remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nconst LocalFilePicker = ({\n  value,\n  onChange,\n  title,\n  message,\n  defaultPath,\n  fullWidth,\n  filters,\n}: Props) => {\n  const onChooseFolder = async () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = remote.getCurrentWindow();\n    const { filePath } = await dialog.showSaveDialog(browserWindow, {\n      title: title,\n      filters: filters,\n      message: message,\n      defaultPath: defaultPath,\n    });\n    onChange(filePath || '');\n  };\n\n  return (\n    <div\n      style={{\n        ...styles.container,\n        width: fullWidth ? '100%' : undefined,\n      }}\n    >\n      <TextField\n        margin=\"dense\"\n        style={styles.textField}\n        type=\"text\"\n        translatableHintText={t`Choose a file`}\n        value={value}\n        onChange={(event, value) => onChange(value)}\n      />\n      <FlatButton\n        label={<Trans>Choose</Trans>}\n        style={styles.button}\n        onClick={onChooseFolder}\n      />\n    </div>\n  );\n};\n\nexport default LocalFilePicker;\n","// @flow\n\nimport optionalRequire from './OptionalRequire';\nimport optionalLazyRequire from '../Utils/OptionalLazyRequire';\nconst fs = optionalRequire('fs');\nconst lazyRequireArchiver = optionalLazyRequire('archiver');\n\n// TODO: Move in a Archiver folder?\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveLocalFolder = ({\n  path,\n  outputFilename,\n  sizeLimit,\n}: {|\n  path: string,\n  outputFilename: string,\n  sizeLimit?: number,\n|}): Promise<string> => {\n  const archiver = lazyRequireArchiver();\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      const fileSize = archive.pointer();\n      console.log(\n        `Archive written at ${outputFilename}, ${fileSize} total bytes.`\n      );\n      if (sizeLimit && fileSize > sizeLimit) {\n        const roundFileSizeInMb = Math.round(fileSize / (1000 * 1000));\n        reject(\n          new Error(\n            `Archive is of size ${roundFileSizeInMb} MB, which is above the limit allowed of ${sizeLimit /\n              (1000 * 1000)} MB.`\n          )\n        );\n      }\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport LocalFilePicker from '../../UI/LocalFilePicker';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst remote = optionalRequire('@electron/remote');\nconst app = remote ? remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = {\n  archiveOutputFilename: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-facebook-instant-games',\n\n  getInitialExportState: (project: gdProject) => ({\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n  }),\n\n  canLaunchBuild: exportState => !!exportState.archiveOutputFilename,\n\n  isNavigationDisabled: () => false,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFilePicker\n          title={'Facebook Instant Games export zip file'}\n          message={\n            'Choose where to save the exported file for Facebook Instant Games'\n          }\n          filters={[\n            {\n              name: 'Compressed file for Facebook Instant Games',\n              extensions: ['zip'],\n            },\n          ]}\n          value={exportState.archiveOutputFilename}\n          defaultPath={app ? app.getPath('documents') : ''}\n          onChange={value =>\n            updateExportState(() => ({ archiveOutputFilename: value }))\n          }\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'FacebookInstantGamesExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        localFileSystem,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem, temporaryOutputDir }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      temporaryOutputDir\n    );\n    exportOptions.setTarget('facebookInstantGames');\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      temporaryOutputDir,\n      urlFiles: localFileSystem.getAllUrlFilesIn(temporaryOutputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return { temporaryOutputDir };\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: context.exportState.archiveOutputFilename,\n    });\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell && path)\n        shell.openPath(path.dirname(exportState.archiveOutputFilename));\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype UploadOptions = {\n  signedUrl: string,\n  contentType: string,\n};\n\nexport const uploadLocalFile = (\n  localFilePath: string,\n  uploadOptions: UploadOptions,\n  onProgress: (progress: number, total: number) => void\n): Promise<void> => {\n  if (!ipcRenderer) return Promise.reject('No support for local file upload');\n\n  ipcRenderer.removeAllListeners('local-file-upload-progress');\n  ipcRenderer.removeAllListeners('local-file-upload-done');\n\n  return new Promise((resolve, reject) => {\n    ipcRenderer.on(\n      'local-file-upload-progress',\n      (event, stepCurrentProgress, stepMaxProgress) => {\n        onProgress(stepCurrentProgress, stepMaxProgress);\n      }\n    );\n    ipcRenderer.on('local-file-upload-done', (event, err) => {\n      if (err) return reject(err);\n      resolve();\n    });\n    ipcRenderer.send('local-file-upload', localFilePath, uploadOptions);\n  });\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadLocalFile } from './LocalFileUploader';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineCordovaExport';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst gd: libGDevelop = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-cordova',\n  onlineBuildType: 'cordova-build',\n  limitedBuilds: true,\n  packageNameWarningType: 'mobile',\n\n  getInitialExportState: () => ({\n    targets: ['androidApk'],\n    keystore: 'new',\n    signingDialogOpen: false,\n  }),\n\n  // Build can be launched only if just opened the dialog or build errored.\n  canLaunchBuild: (exportState, errored, exportStep) =>\n    errored || exportStep === '',\n\n  // Navigation is enabled when the build is errored or whilst uploading.\n  isNavigationDisabled: (exportStep, errored) =>\n    !errored &&\n    ['register', 'export', 'resources-download', 'compress', 'upload'].includes(\n      exportStep\n    ),\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Create package for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineCordovaExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        localFileSystem,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem, temporaryOutputDir }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      temporaryOutputDir\n    );\n    exportOptions.setTarget('cordova');\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      temporaryOutputDir,\n      urlFiles: localFileSystem.getAllUrlFilesIn(temporaryOutputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return { temporaryOutputDir };\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadLocalFile(\n        outputFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    authenticatedUser: AuthenticatedUser,\n    uploadBucketKey: string,\n    gameId: string,\n    options: {|\n      gameName: string,\n      gameVersion: string,\n    |}\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n    if (!firebaseUser)\n      return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      firebaseUser.uid,\n      uploadBucketKey,\n      exportState.targets,\n      exportState.keystore,\n      gameId,\n      options\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildElectron,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { uploadLocalFile } from './LocalFileUploader';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst gd: libGDevelop = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-electron',\n  onlineBuildType: 'electron-build',\n  limitedBuilds: true,\n  packageNameWarningType: 'desktop',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  // Build can be launched only if just opened the dialog or build errored.\n  canLaunchBuild: (exportState, errored, exportStep) =>\n    !!exportState.targets.length && (errored || exportStep === ''),\n\n  // Navigation is enabled when the build is errored or whilst uploading.\n  isNavigationDisabled: (exportStep, errored) =>\n    !errored &&\n    ['register', 'export', 'resources-download', 'compress', 'upload'].includes(\n      exportStep\n    ),\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineElectronExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        localFileSystem,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem, temporaryOutputDir }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      temporaryOutputDir\n    );\n    exportOptions.setTarget('electron');\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      temporaryOutputDir,\n      urlFiles: localFileSystem.getAllUrlFilesIn(temporaryOutputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return { temporaryOutputDir };\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadLocalFile(\n        outputFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    authenticatedUser: AuthenticatedUser,\n    uploadBucketKey: string,\n    gameId: string,\n    options: {|\n      gameName: string,\n      gameVersion: string,\n    |}\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n    if (!firebaseUser)\n      return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      firebaseUser.uid,\n      uploadBucketKey,\n      exportState.targets,\n      gameId,\n      options\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildWeb,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadLocalFile } from './LocalFileUploader';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport LocalFileSystem, { type UrlFileDescriptor } from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  OnlineGameLink,\n} from '../GenericExporters/OnlineWebExport';\nimport { downloadUrlsToLocalFiles } from '../../Utils/LocalFileDownloader';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  localFileSystem: LocalFileSystem,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  // Build can be launched if just opened the dialog or build errored, re-enabled when done.\n  canLaunchBuild: (exportState, errored, exportStep) =>\n    errored || exportStep === '' || exportStep === 'done',\n\n  // Navigation is enabled when the build is errored or if the build is not done.\n  isNavigationDisabled: (exportStep, errored) =>\n    !errored && !['', 'done'].includes(exportStep),\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Generate link</Trans>,\n\n  renderCustomStepsProgress: ({\n    build,\n    project,\n    onSaveProject,\n    errored,\n    exportStep,\n  }) => (\n    <OnlineGameLink\n      build={build}\n      project={project}\n      onSaveProject={onSaveProject}\n      errored={errored}\n      exportStep={exportStep}\n    />\n  ),\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const localFileSystem = new LocalFileSystem({\n        downloadUrlsToLocalFiles: true,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineWebExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        localFileSystem,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: async (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, localFileSystem, temporaryOutputDir }: PreparedExporter,\n    fallbackAuthor: ?{ id: string, username: string }\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.ExportOptions(\n      context.project,\n      temporaryOutputDir\n    );\n    if (fallbackAuthor) {\n      exportOptions.setFallbackAuthor(\n        fallbackAuthor.id,\n        fallbackAuthor.username\n      );\n    }\n    exporter.exportWholePixiProject(exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return {\n      temporaryOutputDir,\n      urlFiles: localFileSystem.getAllUrlFilesIn(temporaryOutputDir),\n    };\n  },\n\n  launchResourcesDownload: async (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    await downloadUrlsToLocalFiles({\n      urlContainers: urlFiles,\n      onProgress: context.updateStepProgress,\n      throwIfAnyError: true,\n    });\n\n    return { temporaryOutputDir };\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n      sizeLimit: 250 * 1000 * 1000,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadLocalFile(\n        outputFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    authenticatedUser: AuthenticatedUser,\n    uploadBucketKey: string,\n    gameId: string,\n    options: {|\n      gameName: string,\n      gameVersion: string,\n    |}\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n    if (!firebaseUser)\n      return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(\n      getAuthorizationHeader,\n      firebaseUser.uid,\n      uploadBucketKey,\n      gameId,\n      options\n    );\n  },\n};\n","// @flow\nimport { type Exporter } from '../ExportDialog';\nimport { localCordovaExportPipeline } from './LocalCordovaExport';\nimport { localElectronExportPipeline } from './LocalElectronExport';\nimport { localHTML5ExportPipeline } from './LocalHTML5Export';\nimport { localFacebookInstantGamesExportPipeline } from './LocalFacebookInstantGamesExport';\nimport { localOnlineCordovaExportPipeline } from './LocalOnlineCordovaExport';\nimport { localOnlineElectronExportPipeline } from './LocalOnlineElectronExport';\nimport { localOnlineWebExportPipeline } from './LocalOnlineWebExport';\nimport { cordovaExporter } from '../GenericExporters/CordovaExport';\nimport { onlineWebExporter } from '../GenericExporters/OnlineWebExport';\nimport { html5Exporter } from '../GenericExporters/HTML5Export';\nimport { facebookInstantGamesExporter } from '../GenericExporters/FacebookInstantGamesExport';\nimport { onlineCordovaExporter } from '../GenericExporters/OnlineCordovaExport';\nimport { onlineElectronExporter } from '../GenericExporters/OnlineElectronExport';\nimport { electronExporter } from '../GenericExporters/ElectronExport';\n\nexport const localOnlineWebExporter: Exporter = {\n  ...onlineWebExporter,\n  exportPipeline: localOnlineWebExportPipeline,\n};\n\nexport const localAutomatedExporters: Array<Exporter> = [\n  {\n    ...html5Exporter,\n    exportPipeline: localHTML5ExportPipeline,\n  },\n  {\n    ...onlineCordovaExporter,\n    exportPipeline: localOnlineCordovaExportPipeline,\n  },\n  {\n    ...onlineElectronExporter,\n    exportPipeline: localOnlineElectronExportPipeline,\n  },\n  {\n    ...facebookInstantGamesExporter,\n    exportPipeline: localFacebookInstantGamesExportPipeline,\n  },\n];\n\nexport const localManualExporters: Array<Exporter> = [\n  {\n    ...html5Exporter,\n    exportPipeline: localHTML5ExportPipeline,\n  },\n  {\n    ...cordovaExporter,\n    exportPipeline: localCordovaExportPipeline,\n  },\n  {\n    ...electronExporter,\n    exportPipeline: localElectronExportPipeline,\n  },\n];\n","// @flow\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\nimport {\n  buildMainMenuDeclarativeTemplate,\n  type BuildMainMenuProps,\n  type MainMenuCallbacks,\n  type MainMenuExtraCallbacks,\n  type MainMenuEvent,\n} from './MainMenu';\nimport PreferencesContext from './Preferences/PreferencesContext';\nconst electron = optionalRequire('electron');\nconst remote = optionalRequire('@electron/remote');\nconst app = remote ? remote.app : null;\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\n// Custom hook to register and deregister IPC listener\nconst useIPCEventListener = ({\n  ipcEvent,\n  callback,\n  shouldApply,\n}: {\n  ipcEvent: MainMenuEvent,\n  callback: Function,\n  shouldApply: boolean,\n}) => {\n  React.useEffect(\n    () => {\n      if (!ipcRenderer || !shouldApply) return;\n\n      const handler = (event, ...eventArgs) => callback(...eventArgs);\n      ipcRenderer.on(ipcEvent, handler);\n      return () => ipcRenderer.removeListener(ipcEvent, handler);\n    },\n    [ipcEvent, callback, shouldApply]\n  );\n};\n\nconst useAppEventListener = ({\n  event,\n  callback,\n}: {\n  event: string,\n  callback: Function,\n}) => {\n  React.useEffect(\n    () => {\n      if (!app) return;\n      const handler = (event, ...eventArgs) => callback(...eventArgs);\n      app.on(event, handler);\n      return () => app.removeListener(event, handler);\n    },\n    [event, callback]\n  );\n};\n\nconst isMainWindow = (windowTitle: string): boolean => {\n  if (!windowTitle) return false;\n  const lowercaseTitle = windowTitle.toLowerCase();\n  return (\n    lowercaseTitle.startsWith('gdevelop') &&\n    lowercaseTitle !== 'gdevelop dialogue tree editor (yarn)' &&\n    lowercaseTitle !== 'gdevelop sound effects editor (jfxr)' &&\n    lowercaseTitle !== 'gdevelop image editor (piskel)'\n  );\n};\n\n/**\n * Create and update the editor main menu using Electron APIs.\n */\nconst ElectronMainMenu = ({\n  props,\n  callbacks,\n  extraCallbacks,\n}: {|\n  props: BuildMainMenuProps,\n  callbacks: MainMenuCallbacks,\n  extraCallbacks: MainMenuExtraCallbacks,\n|}) => {\n  const { i18n, project, recentProjectFiles, shortcutMap } = props;\n  const { onClosePreview } = extraCallbacks;\n  const language = i18n.language;\n  const [\n    isFocusedOnMainWindow,\n    setIsFocusedOnMainWindow,\n  ] = React.useState<boolean>(true);\n  const [focusedWindowId, setFocusedWindowId] = React.useState<number>(\n    remote.getCurrentWindow().id\n  );\n  const closePreviewWindow =\n    !isFocusedOnMainWindow && onClosePreview\n      ? () => onClosePreview(focusedWindowId)\n      : null;\n  const {\n    values: { useShortcutToClosePreviewWindow },\n  } = React.useContext(PreferencesContext);\n\n  useAppEventListener({\n    event: 'browser-window-focus',\n    callback: window => {\n      setFocusedWindowId(window.id);\n      setIsFocusedOnMainWindow(isMainWindow(window.title));\n    },\n  });\n  useAppEventListener({\n    event: 'browser-window-blur',\n    callback: window => {\n      setIsFocusedOnMainWindow(!isMainWindow(window.title));\n    },\n  });\n\n  // We could use a for loop, but for safety let's write every hook one by\n  // one to avoid any change at runtime which would break the rules of hooks.\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open',\n    callback: callbacks.onChooseProject,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-recent',\n    callback: callbacks.onOpenRecentFile,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-save',\n    callback: callbacks.onSaveProject,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-save-as',\n    callback: callbacks.onSaveProjectAs,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-close',\n    callback:\n      useShortcutToClosePreviewWindow && closePreviewWindow\n        ? closePreviewWindow\n        : callbacks.onCloseProject,\n    shouldApply:\n      useShortcutToClosePreviewWindow && closePreviewWindow\n        ? true\n        : isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-close-app',\n    callback: callbacks.onCloseApp,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-export',\n    callback: callbacks.onExportProject,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-create-template',\n    callback: callbacks.onCreateProject,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-create-blank',\n    callback: callbacks.onCreateBlank,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-project-manager',\n    callback: callbacks.onOpenProjectManager,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-home-page',\n    callback: callbacks.onOpenHomePage,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-debugger',\n    callback: callbacks.onOpenDebugger,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-about',\n    callback: callbacks.onOpenAbout,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-preferences',\n    callback: callbacks.onOpenPreferences,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-language',\n    callback: callbacks.onOpenLanguage,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-profile',\n    callback: callbacks.onOpenProfile,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'main-menu-open-games-dashboard',\n    callback: callbacks.onOpenGamesDashboard,\n    shouldApply: isFocusedOnMainWindow,\n  });\n  useIPCEventListener({\n    ipcEvent: 'update-status',\n    callback: callbacks.setElectronUpdateStatus,\n    shouldApply: true, // Keep logic around app update even if on preview window\n  });\n\n  React.useEffect(\n    () => {\n      if (ipcRenderer) {\n        ipcRenderer.send(\n          'set-main-menu',\n          buildMainMenuDeclarativeTemplate({\n            project,\n            i18n,\n            recentProjectFiles,\n            shortcutMap,\n            isApplicationTopLevelMenu: true,\n          })\n        );\n      }\n    },\n    [i18n, language, project, recentProjectFiles, shortcutMap]\n  );\n\n  const { onOpenRecentFile } = callbacks;\n  useCommandWithOptions('OPEN_RECENT_PROJECT', true, {\n    generateOptions: React.useCallback(\n      () =>\n        recentProjectFiles.map(item => ({\n          text: item.fileMetadata.fileIdentifier,\n          handler: () => onOpenRecentFile(item),\n        })),\n      [onOpenRecentFile, recentProjectFiles]\n    ),\n  });\n\n  return null;\n};\n\nexport default ElectronMainMenu;\n","// @flow\nimport {\n  type EventsFunctionCodeWriter,\n  type EventsFunctionCodeWriterCallbacks,\n} from '..';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { getUID } from '../../Utils/LocalUserInfo';\nimport slugs from 'slugs';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionCodeWriter = ({\n  onWriteFile,\n}: EventsFunctionCodeWriterCallbacks): EventsFunctionCodeWriter => {\n  // The generated code for extensions will be stored in a temporary directory\n\n  const outputDir = path.join(\n    os.tmpdir(),\n    `GDGeneratedEventsFunctions-` + getUID()\n  );\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (codeNamespace: string) => {\n    return `${outputDir}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) => getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const includeFile = getPathFor(functionCodeNamespace);\n        onWriteFile({ includeFile, content: code });\n        fs.writeFile(includeFile, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const includeFile = getPathFor(behaviorCodeNamespace);\n        onWriteFile({ includeFile, content: code });\n        fs.writeFile(includeFile, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeObjectCode: (\n      objectCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const includeFile = getPathFor(objectCodeNamespace);\n        onWriteFile({ includeFile, content: code });\n        fs.writeFile(includeFile, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst remote = optionalRequire('@electron/remote');\nconst dialog = remote ? remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalEventsFunctionsExtensionWriter {\n  static chooseEventsFunctionExtensionFile = (\n    extensionName?: string\n  ): Promise<?string> => {\n    if (!dialog) return Promise.reject('Not supported');\n    const browserWindow = remote.getCurrentWindow();\n\n    return dialog\n      .showSaveDialog(browserWindow, {\n        title: 'Export an extension of the project',\n        filters: [\n          {\n            name: 'GDevelop 5 \"events based\" extension',\n            extensions: ['json'],\n          },\n        ],\n        defaultPath: extensionName || 'Extension.json',\n      })\n      .then(({ filePath }) => {\n        if (!filePath) return null;\n        return filePath;\n      });\n  };\n\n  static writeEventsFunctionsExtension = (\n    extension: gdEventsFunctionsExtension,\n    filepath: string\n  ): Promise<void> => {\n    const serializedObject = serializeToJSObject(extension);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the events function extension:', err);\n      throw err;\n    });\n  };\n\n  static chooseCustomObjectFile = (objectName?: string): Promise<?string> => {\n    if (!dialog) return Promise.reject('Not supported');\n    const browserWindow = remote.getCurrentWindow();\n\n    return dialog\n      .showSaveDialog(browserWindow, {\n        title: 'Export an object of the project',\n        filters: [\n          {\n            name: 'GDevelop 5 object configuration',\n            extensions: ['gdo'],\n          },\n        ],\n        defaultPath: objectName || 'Object',\n      })\n      .then(({ filePath }) => {\n        if (!filePath) return null;\n        return filePath;\n      });\n  };\n\n  static writeCustomObject = (\n    customObject: gdObject,\n    filepath: string\n  ): Promise<void> => {\n    const exportedObject = customObject.clone().get();\n    exportedObject.setTags('');\n    exportedObject.getVariables().clear();\n    exportedObject.getEffects().clear();\n    exportedObject\n      .getAllBehaviorNames()\n      .toJSArray()\n      .forEach(name => exportedObject.removeBehavior(name));\n    const serializedObject = serializeToJSObject(exportedObject);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the object:', err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst fs = optionalRequire('fs');\nconst remote = optionalRequire('@electron/remote');\nconst dialog = remote ? remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalEventsFunctionsExtensionOpener {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    if (!dialog) return Promise.reject('Not supported');\n    const browserWindow = remote.getCurrentWindow();\n\n    return dialog\n      .showOpenDialog(browserWindow, {\n        title: 'Import an extension in the project',\n        properties: ['openFile'],\n        message: 'Choose an extension file to import (.json file)',\n        filters: [\n          {\n            name: 'GDevelop 5 \"events based\" extension',\n            extensions: ['json'],\n          },\n        ],\n      })\n      .then(({ filePaths }) => {\n        if (!filePaths || !filePaths.length) return null;\n        return filePaths[0];\n      });\n  };\n\n  static readEventsFunctionExtensionFile = (\n    filepath: string\n  ): Promise<Object> => {\n    return readJSONFile(filepath);\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { type FileMetadata } from '../index';\nimport { unsplit } from '../../Utils/ObjectSplitter';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst remote = optionalRequire('@electron/remote');\nconst dialog = remote ? remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport const onOpenWithPicker = (): Promise<?FileMetadata> => {\n  if (!dialog) return Promise.reject('Not supported');\n  const browserWindow = remote.getCurrentWindow();\n\n  return dialog\n    .showOpenDialog(browserWindow, {\n      title: 'Open a project',\n      properties: ['openFile'],\n      message:\n        'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n      filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n    })\n    .then(({ filePaths }) => {\n      if (!filePaths || !filePaths.length) return null;\n      return { fileIdentifier: filePaths[0] };\n    });\n};\n\nexport const onOpen = (\n  fileMetadata: FileMetadata\n): Promise<{|\n  content: Object,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const projectPath = path.dirname(filePath);\n  return readJSONFile(filePath).then(object => {\n    return unsplit(object, {\n      getReferencePartialObject: referencePath => {\n        return readJSONFile(path.join(projectPath, referencePath) + '.json');\n      },\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n      // Limit unsplitting to depth 3 (which would allow properties of layouts/external layouts/external events\n      // to be un-splitted, but not the content of these properties), to avoid very slow processing\n      // of large game files.\n      maxUnsplitDepth: 3,\n    }).then(() => {\n      return { content: object };\n    });\n  });\n};\n\nexport const getAutoSaveCreationDate = async (\n  fileMetadata: FileMetadata,\n  compareLastModified: boolean\n): Promise<?number> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const autoSavePath = filePath + '.autosave';\n  if (fs.existsSync(autoSavePath)) {\n    const autoSavedTime = fs.statSync(autoSavePath).mtime.getTime();\n    if (!compareLastModified) {\n      return autoSavedTime;\n    }\n    try {\n      const saveTime = fs.statSync(filePath).mtime.getTime();\n      // When comparing the last modified time, add a 5 seconds margin to avoid\n      // showing the warning if the user has just saved the project, or if the\n      // project has been decompressed from a zip file, causing the last modified\n      // time to be the time of decompression.\n      return autoSavedTime > saveTime + 5000 ? autoSavedTime : null;\n    } catch (err) {\n      console.error('Unable to compare *.autosave to project', err);\n      return null;\n    }\n  }\n  return null;\n};\n\nexport const onGetAutoSave = (fileMetadata: FileMetadata) => {\n  return Promise.resolve({\n    ...fileMetadata,\n    fileIdentifier: fileMetadata.fileIdentifier + '.autosave',\n  });\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props} viewBox=\"0 0 16 16\" style={{ fill: 'none' }}>\n    <path\n      d=\"M5.75 11.25C5.75 11.25 6 14.25 4 15.25H12C10 14.25 10.25 11.25 10.25 11.25M5.75 11.25H13.25C14.3546 11.25 15.25 10.3546 15.25 9.25V2.75C15.25 1.64543 14.3546 0.75 13.25 0.75H2.75C1.64543 0.75 0.75 1.64543 0.75 2.75V9.25C0.75 10.3546 1.64543 11.25 2.75 11.25H5.75Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </SvgIcon>\n));\n","// @flow\n\nimport {\n  applyResourceDefaults,\n  getLocalResourceFullPath,\n  getResourceFilePathStatus,\n} from '../../ResourcesList/ResourceUtils';\nimport { mapVector } from '../../Utils/MapFor';\nimport newNameGenerator from '../../Utils/NewNameGenerator';\nimport optionalLazyRequire from '../../Utils/OptionalLazyRequire';\nimport optionalRequire from '../../Utils/OptionalRequire';\n\nconst gd: libGDevelop = global.gd;\n\nconst lazyRequireGlob = optionalLazyRequire('glob');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\n\nexport const locateResourceFile = ({\n  project,\n  resource,\n}: {|\n  project: gdProject,\n  resource: gdResource,\n|}) => {\n  const resourceFilePath = getLocalResourceFullPath(\n    project,\n    resource.getName()\n  );\n\n  electron.shell.showItemInFolder(path.resolve(resourceFilePath));\n};\n\nexport const openResourceFile = ({\n  project,\n  resource,\n}: {|\n  project: gdProject,\n  resource: gdResource,\n|}) => {\n  const resourceFilePath = getLocalResourceFullPath(\n    project,\n    resource.getName()\n  );\n  electron.shell.openPath(path.resolve(resourceFilePath));\n};\n\nexport const copyResourceFilePath = ({\n  project,\n  resource,\n}: {|\n  project: gdProject,\n  resource: gdResource,\n|}) => {\n  const resourceFilePath = getLocalResourceFullPath(\n    project,\n    resource.getName()\n  );\n  electron.clipboard.writeText(path.resolve(resourceFilePath));\n};\n\nexport const scanForNewResources = async ({\n  project,\n  extensions,\n  createResource,\n}: {|\n  project: gdProject,\n  extensions: Array<string>,\n  createResource: () => gdResource,\n|}) => {\n  const glob = lazyRequireGlob();\n  if (!glob) return;\n\n  const resourcesManager = project.getResourcesManager();\n  const projectPath = path.dirname(project.getProjectFile());\n\n  const allExtensions = [\n    ...extensions,\n    ...extensions.map(extension => extension.toUpperCase()),\n  ];\n\n  try {\n    const allFiles = await new Promise((resolve, reject) => {\n      glob(\n        projectPath + '/**/*.{' + allExtensions.join(',') + '}',\n        (error, files) => {\n          if (error) reject(error);\n          else resolve(files);\n        }\n      );\n    });\n\n    const filesToCheck = new gd.VectorString();\n    allFiles.forEach(filePath =>\n      filesToCheck.push_back(path.relative(projectPath, filePath))\n    );\n    const filePathsNotInResources = project\n      .getResourcesManager()\n      .findFilesNotInResources(filesToCheck);\n    filesToCheck.delete();\n\n    mapVector(filePathsNotInResources, (relativeFilePath: string) => {\n      const resourceName = newNameGenerator(relativeFilePath, name =>\n        resourcesManager.hasResource(name)\n      );\n\n      const resource = createResource();\n      resource.setFile(relativeFilePath);\n      resource.setName(resourceName);\n      applyResourceDefaults(project, resource);\n      resourcesManager.addResource(resource);\n      resource.delete();\n\n      console.info(\n        `\"${relativeFilePath}\" added to project as resource named \"${resourceName}\".`\n      );\n    });\n  } catch (error) {\n    console.error(`Error finding files inside ${projectPath}:`, error);\n    return;\n  }\n};\n\nexport const removeAllResourcesWithInvalidPath = ({\n  project,\n}: {|\n  project: gdProject,\n|}) => {\n  const resourcesManager = project.getResourcesManager();\n  const removedResourceNames = resourcesManager\n    .getAllResourceNames()\n    .toJSArray()\n    .filter(resourceName => {\n      return getResourceFilePathStatus(project, resourceName) === 'error';\n    });\n\n  removedResourceNames.forEach(resourceName => {\n    resourcesManager.removeResource(resourceName);\n    console.info('Removed due to invalid path: ' + resourceName);\n  });\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans, t } from '@lingui/macro';\nimport { type StorageProvider } from '../index';\nimport {\n  onOpenWithPicker,\n  onOpen,\n  getAutoSaveCreationDate,\n  onGetAutoSave,\n} from './LocalProjectOpener';\nimport {\n  onSaveProject,\n  onChooseSaveProjectAsLocation,\n  onSaveProjectAs,\n  onAutoSaveProject,\n  getWriteErrorMessage,\n  renderNewProjectSaveAsLocationChooser,\n  getProjectLocation,\n} from './LocalProjectWriter';\nimport {\n  type AppArguments,\n  POSITIONAL_ARGUMENTS_KEY,\n} from '../../Utils/Window';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport Computer from '../../UI/CustomSvgIcons/Computer';\nimport {\n  copyResourceFilePath,\n  locateResourceFile,\n  openResourceFile,\n  removeAllResourcesWithInvalidPath,\n  scanForNewResources,\n} from './LocalProjectResourcesHandler';\nimport { allResourceKindsAndMetadata } from '../../ResourcesList/ResourceSource';\n\n/**\n * Use the Electron APIs to provide access to the native\n * file system (with native save/open dialogs).\n */\nexport default ({\n  internalName: 'LocalFile',\n  name: t`Your computer`,\n  renderIcon: props => <Computer fontSize={props.size} />,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  getProjectLocation: getProjectLocation,\n  renderNewProjectSaveAsLocationChooser: renderNewProjectSaveAsLocationChooser,\n  createOperations: () => ({\n    onOpenWithPicker,\n    onOpen,\n    getAutoSaveCreationDate,\n    onSaveProject,\n    onChooseSaveProjectAsLocation,\n    onSaveProjectAs,\n    onAutoSaveProject,\n    onGetAutoSave,\n    getOpenErrorMessage: (error: Error): MessageDescriptor => {\n      return t`Check that the file exists, that this file is a proper game created with GDevelop and that you have the authorization to open it.`;\n    },\n    getWriteErrorMessage,\n  }),\n  createResourceOperations: () => ({\n    project,\n    resource,\n    i18n,\n    updateInterface,\n    cleanUserSelectionOfResources,\n    informUser,\n  }) => [\n    {\n      label: i18n._(t`Locate file`),\n      click: () => locateResourceFile({ project, resource }),\n    },\n    {\n      label: i18n._(t`Open file`),\n      click: () => openResourceFile({ project, resource }),\n    },\n    {\n      label: i18n._(t`Copy file path`),\n      click: () => {\n        copyResourceFilePath({ project, resource });\n        informUser({\n          message: <Trans>Resource file path copied to clipboard</Trans>,\n        });\n      },\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Scan in the project folder for...`),\n      submenu: allResourceKindsAndMetadata.map(\n        ({ displayName, fileExtensions, createNewResource }) => ({\n          label: i18n._(displayName),\n          click: async () => {\n            await scanForNewResources({\n              project,\n              extensions: fileExtensions,\n              createResource: createNewResource,\n            });\n            updateInterface();\n          },\n        })\n      ),\n    },\n    {\n      label: i18n._(t`Remove resources with invalid path`),\n      click: () => {\n        removeAllResourcesWithInvalidPath({ project });\n        // Remove user selection in case the user selected a resource\n        // that was just removed.\n        cleanUserSelectionOfResources();\n        // Force update of the resources list as otherwise it could render\n        // resources that were just deleted.\n        updateInterface();\n      },\n    },\n  ],\n}: StorageProvider);\n","// @flow\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\n/**\n * Set up some watchers for GDJS and Extensions sources.\n * Stop the watchers when the component is unmounted or `shouldWatch` prop is false.\n */\nexport const LocalGDJSDevelopmentWatcher = () => {\n  const preferences = React.useContext(PreferencesContext);\n  const shouldWatch = preferences.values.useGDJSDevelopmentWatcher;\n\n  React.useEffect(\n    () => {\n      if (!shouldWatch) {\n        // Nothing to set up in the effect if watch is deactivated.\n        return;\n      }\n\n      if (!ipcRenderer) {\n        console.error(\n          'Unable to find ipcRenderer to set up GDJS development watchers'\n        );\n        return;\n      }\n\n      ipcRenderer.send('setup-local-gdjs-development-watcher');\n      return () => {\n        ipcRenderer.send('close-local-gdjs-development-watcher');\n      };\n    },\n    [shouldWatch]\n  );\n\n  return null;\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport PromisePool from '@supercharge/promise-pool';\nimport { retryIfFailed } from '../../Utils/RetryIfFailed';\nimport newNameGenerator from '../../Utils/NewNameGenerator';\nimport { type FileMetadata } from '../index';\nimport {\n  extractFilenameWithExtensionFromProductAuthorizedUrl,\n  fetchTokenForPrivateGameTemplateAuthorizationIfNeeded,\n  isPrivateGameTemplateResourceAuthorizedUrl,\n  isProductAuthorizedResourceUrl,\n} from '../../Utils/GDevelopServices/Shop';\nimport {\n  extractFilenameWithExtensionFromPublicAssetResourceUrl,\n  isPublicAssetResourceUrl,\n} from '../../Utils/GDevelopServices/Asset';\nimport {\n  isBlobURL,\n  isURL,\n  parseLocalFilePathOrExtensionFromMetadata,\n} from '../../ResourcesList/ResourceUtils';\nimport { sanitizeFilename } from '../../Utils/Filename';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport { extractFilenameFromProjectResourceUrl } from '../../Utils/GDevelopServices/Project';\nimport axios from 'axios';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\n\ntype Options = {|\n  project: gdProject,\n  fileMetadata: FileMetadata,\n  onProgress: (number, number) => void,\n  authenticatedUser: AuthenticatedUser,\n|};\n\nconst generateUnusedFilepath = (\n  basePath: string,\n  alreadyUsedFilePaths: Set<string>,\n  filename: string\n) => {\n  const extension = path.extname(filename);\n  const filenameWithoutExtension = path.basename(filename, extension);\n  const name = newNameGenerator(filenameWithoutExtension, name => {\n    const tentativePath = path.join(basePath, name) + extension;\n    return (\n      fs.existsSync(tentativePath) || alreadyUsedFilePaths.has(tentativePath)\n    );\n  });\n  return path.join(basePath, name) + extension;\n};\n\nconst downloadBlobToLocalFile = async (\n  blobUrl: string,\n  filePath: string\n): Promise<void> => {\n  if (!ipcRenderer) throw new Error('Not supported');\n\n  const response = await axios.get(blobUrl, {\n    responseType: 'arraybuffer',\n  });\n  const arrayBuffer = response.data;\n\n  await ipcRenderer.invoke(\n    'local-file-save-from-arraybuffer',\n    arrayBuffer,\n    filePath\n  );\n};\n\n// This mover can be used for both public URLs and Cloud project resources.\nexport const moveUrlResourcesToLocalFiles = async ({\n  project,\n  fileMetadata,\n  onProgress,\n  authenticatedUser,\n}: Options) => {\n  if (!fs || !ipcRenderer) throw new Error('Unsupported');\n\n  // Get all resources to download.\n  const resourcesManager = project.getResourcesManager();\n  const allResourceNames = resourcesManager.getAllResourceNames().toJSArray();\n  const resourcesToFetchNames = allResourceNames.filter(resourceName => {\n    const resource = resourcesManager.getResource(resourceName);\n    const resourceFile = resource.getFile();\n    return isURL(resourceFile);\n  });\n  const tokenForPrivateGameTemplateAuthorization = await fetchTokenForPrivateGameTemplateAuthorizationIfNeeded(\n    {\n      authenticatedUser,\n      allResourcePaths: resourcesToFetchNames.map(resourceName => {\n        const resource = resourcesManager.getResource(resourceName);\n        return resource.getFile();\n      }),\n    }\n  );\n\n  const projectPath = path.dirname(fileMetadata.fileIdentifier);\n  const baseAssetsPath = path.join(projectPath, 'assets');\n  const downloadedFilePaths = new Set<string>();\n  const erroredResources = [];\n\n  let fetchedResourcesCount = 0;\n\n  await PromisePool.withConcurrency(50)\n    .for(resourcesToFetchNames) // It's important not to loop on allResourceNames, as calling the onProgress can be costly on the UI.\n    .process(async resourceName => {\n      const resource = resourcesManager.getResource(resourceName);\n\n      const resourceFile = resource.getFile();\n      if (isURL(resourceFile)) {\n        if (isBlobURL(resourceFile)) {\n          try {\n            const {\n              localFilePath,\n              extension,\n            } = parseLocalFilePathOrExtensionFromMetadata(resource);\n            const downloadedFilePath = localFilePath\n              ? path.resolve(projectPath, localFilePath)\n              : generateUnusedFilepath(\n                  baseAssetsPath,\n                  downloadedFilePaths,\n                  sanitizeFilename(resource.getName() + (extension || ''))\n                );\n\n            await fs.ensureDir(baseAssetsPath);\n            await downloadBlobToLocalFile(resourceFile, downloadedFilePath);\n            resource.setFile(\n              path.relative(projectPath, downloadedFilePath).replace(/\\\\/g, '/')\n            );\n          } catch (error) {\n            erroredResources.push({ resourceName, error });\n          }\n        } else {\n          let filename;\n          if (isProductAuthorizedResourceUrl(resourceFile)) {\n            // Resource is coming from a private asset or private game template.\n            filename = extractFilenameWithExtensionFromProductAuthorizedUrl(\n              resourceFile\n            );\n          } else if (isPublicAssetResourceUrl(resourceFile)) {\n            // Resource is coming from a public asset.\n            filename = extractFilenameWithExtensionFromPublicAssetResourceUrl(\n              resourceFile\n            );\n          } else {\n            // Resource is a project resource or a generic url.\n            filename = extractFilenameFromProjectResourceUrl(resourceFile);\n          }\n\n          // Find a new file for the resource to download.\n          const downloadedFilePath = generateUnusedFilepath(\n            baseAssetsPath,\n            downloadedFilePaths,\n            filename\n          );\n          downloadedFilePaths.add(downloadedFilePath);\n\n          try {\n            await retryIfFailed({ times: 2 }, async () => {\n              await fs.ensureDir(baseAssetsPath);\n              const resourceUrl = new URL(resourceFile);\n              if (\n                isPrivateGameTemplateResourceAuthorizedUrl(resourceUrl.href) &&\n                tokenForPrivateGameTemplateAuthorization\n              ) {\n                resourceUrl.searchParams.set(\n                  'token',\n                  tokenForPrivateGameTemplateAuthorization\n                );\n              }\n              const encodedUrl = resourceUrl.href; // Encode the URL to support special characters in file names.\n              await ipcRenderer.invoke(\n                'local-file-download',\n                encodedUrl,\n                downloadedFilePath\n              );\n              resource.setFile(\n                path\n                  .relative(projectPath, downloadedFilePath)\n                  .replace(/\\\\/g, '/')\n              );\n            });\n          } catch (error) {\n            erroredResources.push({ resourceName, error });\n          }\n        }\n      }\n\n      onProgress(fetchedResourcesCount++, resourcesToFetchNames.length);\n    });\n\n  return {\n    erroredResources,\n  };\n};\n","// @flow\n\nexport const processByChunk = async <Item, MappedItem>(\n  array: Array<Item>,\n  {\n    transformItem,\n    isChunkTooBig,\n    processChunk,\n  }: {|\n    transformItem: Item => Promise<MappedItem>,\n    isChunkTooBig: (MappedItem[]) => boolean,\n    processChunk: (MappedItem[]) => Promise<void>,\n  |}\n): Promise<void> => {\n  let currentItemIndex = 0;\n  const nextChunk: Array<MappedItem> = [];\n\n  while (currentItemIndex < array.length) {\n    const mappedItem = await transformItem(array[currentItemIndex]);\n\n    if (!nextChunk.length) {\n      // Existing chunk is empty - let the new item be added to it.\n    } else {\n      if (!isChunkTooBig([...nextChunk, mappedItem])) {\n        // Item can be added to the existing chunk - let's add it.\n      } else {\n        // Item can't be added to the existing chunk - process the existing chunk\n        await processChunk(nextChunk);\n        nextChunk.length = 0;\n      }\n    }\n\n    nextChunk.push(mappedItem);\n    currentItemIndex++;\n  }\n\n  if (nextChunk.length) {\n    await processChunk(nextChunk);\n    nextChunk.length = 0;\n  }\n\n  return;\n};\n","// @flow\r\nimport optionalRequire from './OptionalRequire';\r\nconst path = optionalRequire('path');\r\nconst fs = optionalRequire('fs');\r\n\r\nconst readLocalFileToArrayBuffer = async (\r\n  filePath: string\r\n): Promise<ArrayBuffer> => {\r\n  const buffer: Buffer = await new Promise((resolve, reject) => {\r\n    fs.readFile(filePath, function(err, buffer) {\r\n      if (err) {\r\n        reject(err);\r\n        return;\r\n      }\r\n\r\n      resolve(buffer);\r\n    });\r\n  });\r\n\r\n  // See https://stackoverflow.com/questions/8609289/convert-a-binary-nodejs-buffer-to-javascript-arraybuffer:\r\n  // The slice and offset stuff is required because small Buffers (less than 4 kB by default, half the pool size)\r\n  // can be views on a shared ArrayBuffer. Without slicing, you can end up with an ArrayBuffer containing data from another Buffer.\r\n  const arrayBuffer = buffer.buffer.slice(\r\n    buffer.byteOffset,\r\n    buffer.byteOffset + buffer.byteLength\r\n  );\r\n  return arrayBuffer;\r\n};\r\n\r\n// See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types.\r\nconst extensionToMimeType = {\r\n  // Common audio extensions:\r\n  aac: 'audio/aac',\r\n  wav: 'audio/wav',\r\n  mp3: 'audio/mp3',\r\n  ogg: 'audio/ogg',\r\n\r\n  // Common image extensions:\r\n  png: 'image/png',\r\n  jpg: 'image/jpeg',\r\n  jpeg: 'image/jpeg',\r\n  webp: 'image/webp',\r\n\r\n  // Common font extensions:\r\n  ttf: 'font/ttf',\r\n  otf: 'font/otf',\r\n\r\n  // Common video extensions:\r\n  mp4: 'video/mp4',\r\n  webm: 'video/webm',\r\n\r\n  // Other common extensions:\r\n  json: 'application/json',\r\n  xml: 'application/xml',\r\n  gz: 'application/gzip',\r\n  js: 'application/javascript',\r\n};\r\n\r\nexport const readLocalFileToFile = async (filePath: string): Promise<File> => {\r\n  const arrayBuffer = await readLocalFileToArrayBuffer(filePath);\r\n  const extensionWithoutLeadingDot = path.extname(filePath).replace(/^\\./, '');\r\n  return new File([arrayBuffer], path.basename(filePath), {\r\n    type:\r\n      extensionToMimeType[extensionWithoutLeadingDot] ||\r\n      'application/octet-stream',\r\n  });\r\n};\r\n","// @flow\nimport {\n  type MoveAllProjectResourcesOptions,\n  type MoveAllProjectResourcesResult,\n  type MoveAllProjectResourcesFunction,\n} from './index';\nimport LocalFileStorageProvider from '../LocalFileStorageProvider';\nimport { moveUrlResourcesToLocalFiles } from '../LocalFileStorageProvider/LocalFileResourceMover';\nimport UrlStorageProvider from '../UrlStorageProvider';\nimport CloudStorageProvider from '../CloudStorageProvider';\nimport LocalFileSystem from '../../Export/LocalExporters/LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { moveUrlResourcesToCloudProject } from '../CloudStorageProvider/CloudResourceMover';\nimport { checkIfIsGDevelopCloudBucketUrl } from '../../Utils/CrossOrigin';\nimport {\n  getCredentialsForCloudProject,\n  uploadProjectResourceFiles,\n  type UploadedProjectResourceFiles,\n} from '../../Utils/GDevelopServices/Project';\nimport { processByChunk } from '../../Utils/ProcessByChunk';\nimport { readLocalFileToFile } from '../../Utils/LocalFileUploader';\nimport { isURL, isBlobURL } from '../../ResourcesList/ResourceUtils';\nconst path = optionalRequire('path');\n\nconst gd: libGDevelop = global.gd;\n\ntype ResourceAndFile = {|\n  resource: gdResource,\n  file: File,\n|};\n\nexport const moveAllLocalResourcesToCloudResources = async ({\n  project,\n  authenticatedUser,\n  oldFileMetadata,\n  newFileMetadata,\n  onProgress,\n}: MoveAllProjectResourcesOptions): Promise<MoveAllProjectResourcesResult> => {\n  const result: MoveAllProjectResourcesResult = {\n    erroredResources: [],\n  };\n\n  const newCloudProjectId = newFileMetadata.fileIdentifier;\n\n  const resourcesManager = project.getResourcesManager();\n\n  /**\n   * Find the local resources that must be\n   * uploaded into the new project.\n   */\n  const getResourcesToUpload = (project: gdProject): Array<gdResource> => {\n    const allResourceNames = resourcesManager.getAllResourceNames().toJSArray();\n    return allResourceNames\n      .map(\n        (resourceName: string): ?gdResource => {\n          const resource = resourcesManager.getResource(resourceName);\n          const resourceFile = resource.getFile();\n\n          if (isURL(resourceFile)) {\n            if (checkIfIsGDevelopCloudBucketUrl(resourceFile)) {\n              // URL from a cloud project: this is unlikely and would not work\n              // (as the project is a local project). Still, ignore this.\n              return null;\n            } else if (isBlobURL(resourceFile)) {\n              result.erroredResources.push({\n                resourceName: resource.getName(),\n                error: new Error('Unsupported blob URL.'),\n              });\n              return null;\n            } else {\n              // Public URL resource: nothing to do.\n              return null;\n            }\n          } else {\n            // Local resource to be downloaded.\n            return resource;\n          }\n        }\n      )\n      .filter(Boolean);\n  };\n\n  const allResourcesToUpload = getResourcesToUpload(project);\n\n  const projectPath = path.dirname(oldFileMetadata.fileIdentifier);\n\n  let alreadyDoneCount = 0;\n  // Read all files as Files.\n  await processByChunk(allResourcesToUpload, {\n    transformItem: async (resource): Promise<ResourceAndFile | null> => {\n      const resourceAbsolutePath = path.resolve(\n        projectPath,\n        resource.getFile()\n      );\n\n      try {\n        const file = await readLocalFileToFile(resourceAbsolutePath);\n        return {\n          resource,\n          file,\n        };\n      } catch (error) {\n        result.erroredResources.push({\n          resourceName: resource.getName(),\n          error: new Error(\n            `Unable to open the file (${resourceAbsolutePath}).`\n          ),\n        });\n        return null;\n      }\n    },\n    isChunkTooBig: (resourceAndFilesChunk: Array<ResourceAndFile | null>) => {\n      if (resourceAndFilesChunk.length > 70) return true;\n\n      const allBufferSize = resourceAndFilesChunk\n        .filter(Boolean)\n        .reduce((size, { file }) => size + file.size, 0);\n\n      // Stop a chunk when more than 150MB are read to be uploaded. This is\n      // to avoid loading all resources in memory at once. This don't give an exact\n      // guarantee on the upper bound (a single file could be more than 150MB), but\n      // this limits the risks of running out of memory.\n      return allBufferSize > 150 * 1000 * 1000;\n    },\n    processChunk: async (\n      resourceAndFilesChunk: Array<ResourceAndFile | null>\n    ) => {\n      const resourceAndFilesToUpload: ResourceAndFile[] = resourceAndFilesChunk.filter(\n        Boolean\n      );\n\n      // Upload the files just read, for the new project.\n      await getCredentialsForCloudProject(authenticatedUser, newCloudProjectId);\n      const uploadedProjectResourceFiles: UploadedProjectResourceFiles = await uploadProjectResourceFiles(\n        authenticatedUser,\n        newCloudProjectId,\n        resourceAndFilesToUpload.map(({ file }) => file),\n        (count, total) => {\n          onProgress(alreadyDoneCount + count, allResourcesToUpload.length);\n        }\n      );\n      alreadyDoneCount += resourceAndFilesChunk.length;\n\n      // Update resources with the newly created URLs.\n      uploadedProjectResourceFiles.forEach(({ url, error }, index) => {\n        const resource = resourceAndFilesToUpload[index].resource;\n        if (error || !url) {\n          result.erroredResources.push({\n            resourceName: resource.getName(),\n            error: error || new Error('Unknown error during upload.'),\n          });\n          return;\n        }\n\n        resource.setFile(url);\n      });\n    },\n  });\n\n  return result;\n};\n\nconst movers: {\n  [string]: MoveAllProjectResourcesFunction,\n} = {\n  [`${LocalFileStorageProvider.internalName}=>${\n    LocalFileStorageProvider.internalName\n  }`]: async ({ project, newFileMetadata }: MoveAllProjectResourcesOptions) => {\n    // TODO: Ideally, errors while copying resources should be reported.\n    // TODO: Report progress.\n    const projectPath = path.dirname(newFileMetadata.fileIdentifier);\n    const fileSystem = assignIn(\n      new gd.AbstractFileSystemJS(),\n      new LocalFileSystem()\n    );\n    gd.ProjectResourcesCopier.copyAllResourcesTo(\n      project,\n      // $FlowFixMe - fileSystem is a gdAbstractFileSystem, despite the assignIn.\n      fileSystem,\n      projectPath,\n      true, // Update the project with the new resource paths\n      false, // Don't move absolute files\n      true // Keep relative files folders structure.\n    );\n    return {\n      erroredResources: [],\n    };\n  },\n  // When saving a Cloud project locally, all resources are downloaded (including\n  // the ones on GDevelop Cloud or private game templates).\n  [`${CloudStorageProvider.internalName}=>${\n    LocalFileStorageProvider.internalName\n  }`]: ({ project, newFileMetadata, onProgress, authenticatedUser }) =>\n    moveUrlResourcesToLocalFiles({\n      project,\n      fileMetadata: newFileMetadata,\n      onProgress,\n      authenticatedUser,\n    }),\n  // On the desktop app, try to download all URLs into local files, put\n  // next to the project file (in a \"assets\" directory). This is helpful\n  // to continue working on a game started on the web-app (using public URLs\n  // for resources).\n  // This is also helpful to download private game templates resources so that\n  // the game can be opened offline.\n  [`${UrlStorageProvider.internalName}=>${\n    LocalFileStorageProvider.internalName\n  }`]: ({ project, newFileMetadata, onProgress, authenticatedUser }) =>\n    moveUrlResourcesToLocalFiles({\n      project,\n      fileMetadata: newFileMetadata,\n      onProgress,\n      authenticatedUser,\n    }),\n\n  // Moving to GDevelop \"Cloud\" storage:\n\n  // From a local project to a Cloud project, all resources are uploaded.\n  [`${LocalFileStorageProvider.internalName}=>${\n    CloudStorageProvider.internalName\n  }`]: moveAllLocalResourcesToCloudResources,\n  // From a Cloud project to another, resources need to be copied\n  // (unless they are public URLs).\n  [`${CloudStorageProvider.internalName}=>${\n    CloudStorageProvider.internalName\n  }`]: moveUrlResourcesToCloudProject,\n  // Nothing to move around when going from a project on a public URL\n  // to a cloud project (we could offer an option one day though to download\n  // and upload the URL resources on GDevelop Cloud).\n  [`${UrlStorageProvider.internalName}=>${\n    CloudStorageProvider.internalName\n  }`]: moveUrlResourcesToCloudProject,\n};\n\nconst LocalResourceMover = {\n  moveAllProjectResources: async (\n    options: MoveAllProjectResourcesOptions\n  ): Promise<MoveAllProjectResourcesResult> => {\n    const { oldStorageProvider, newStorageProvider } = options;\n    const mover =\n      movers[\n        `${oldStorageProvider.internalName}=>${newStorageProvider.internalName}`\n      ];\n    if (!mover)\n      throw new Error(\n        `Can't find a ResourceMover for ${oldStorageProvider.internalName} to ${\n          newStorageProvider.internalName\n        }.`\n      );\n\n    return mover(options);\n  },\n};\n\nexport default LocalResourceMover;\n","// @flow\nimport {\n  type ResourceFetcher,\n  type FetchAllProjectResourcesOptions,\n  type FetchAllProjectResourcesResult,\n  type FetchAllProjectResourcesFunction,\n} from './index';\nimport LocalFileStorageProvider from '../LocalFileStorageProvider';\nimport { moveUrlResourcesToLocalFiles } from '../LocalFileStorageProvider/LocalFileResourceMover';\nimport UrlStorageProvider from '../UrlStorageProvider';\nimport CloudStorageProvider from '../CloudStorageProvider';\nimport { fetchRelativeResourcesToFullUrls } from '../UrlStorageProvider/UrlResourceFetcher';\nimport { moveUrlResourcesToCloudFilesIfPrivate } from '../CloudStorageProvider/CloudResourceFetcher';\n\nconst fetchers: {\n  [string]: FetchAllProjectResourcesFunction,\n} = {\n  // The Cloud file storage provider fetches the resources that are\n  // private URLs by downloading them and reuploading them to the cloud.\n  [CloudStorageProvider.internalName]: moveUrlResourcesToCloudFilesIfPrivate,\n  // The local file storage provider fetches the resources that are URLs\n  // by downloading them locally.\n  [LocalFileStorageProvider.internalName]: moveUrlResourcesToLocalFiles,\n  // The URL storage consider relative resources to be relative to the project\n  // URL. This allows to open local projects uploaded to GitHub for example.\n  [UrlStorageProvider.internalName]: fetchRelativeResourcesToFullUrls,\n};\n\nconst LocalResourceFetcher: ResourceFetcher = {\n  fetchAllProjectResources: async (\n    options: FetchAllProjectResourcesOptions\n  ): Promise<FetchAllProjectResourcesResult> => {\n    const { storageProvider } = options;\n    const fetcher = fetchers[storageProvider.internalName];\n    if (!fetcher)\n      throw new Error(\n        `Can't find a ResourceFetcher for ${\n          storageProvider.internalName\n        } - have you registered the storage provider here?`\n      );\n\n    return fetcher(options);\n  },\n};\n\nexport default LocalResourceFetcher;\n","// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport Authentication from './Utils/GDevelopServices/Authentication';\nimport './UI/icomoon-font.css'; // Styles for Icomoon font.\n\n// Import for Electron powered IDE.\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport {\n  localAutomatedExporters,\n  localManualExporters,\n  localOnlineWebExporter,\n} from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nimport LocalEventsFunctionsExtensionWriter from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter';\nimport LocalEventsFunctionsExtensionOpener from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport LocalFileStorageProvider from './ProjectsStorage/LocalFileStorageProvider';\nimport { LocalGDJSDevelopmentWatcher } from './GameEngineFinder/LocalGDJSDevelopmentWatcher';\nimport CloudStorageProvider from './ProjectsStorage/CloudStorageProvider';\nimport UrlStorageProvider from './ProjectsStorage/UrlStorageProvider';\nimport LocalResourceMover from './ProjectsStorage/ResourceMover/LocalResourceMover';\nimport LocalResourceFetcher from './ProjectsStorage/ResourceFetcher/LocalResourceFetcher';\n\nconst gd: libGDevelop = global.gd;\n\nexport const create = (authentication: Authentication) => {\n  Window.setUpContextMenu();\n\n  const appArguments = Window.getArguments();\n  const isDev = Window.isDev();\n\n  return (\n    <Providers\n      authentication={authentication}\n      disableCheckForUpdates={!!appArguments['disable-update-check']}\n      makeEventsFunctionCodeWriter={makeLocalEventsFunctionCodeWriter}\n      eventsFunctionsExtensionWriter={LocalEventsFunctionsExtensionWriter}\n      eventsFunctionsExtensionOpener={LocalEventsFunctionsExtensionOpener}\n    >\n      {({ i18n }) => (\n        <ProjectStorageProviders\n          appArguments={appArguments}\n          storageProviders={[\n            LocalFileStorageProvider,\n            UrlStorageProvider,\n            CloudStorageProvider,\n          ]}\n          defaultStorageProvider={LocalFileStorageProvider}\n        >\n          {({\n            getStorageProviderOperations,\n            getStorageProviderResourceOperations,\n            storageProviders,\n            initialFileMetadataToOpen,\n            getStorageProvider,\n          }) => (\n            <MainFrame\n              i18n={i18n}\n              renderMainMenu={(props, callbacks, extraCallbacks) => (\n                <ElectronMainMenu\n                  props={props}\n                  callbacks={callbacks}\n                  extraCallbacks={extraCallbacks}\n                />\n              )}\n              renderPreviewLauncher={(props, ref) => (\n                <LocalPreviewLauncher {...props} ref={ref} />\n              )}\n              renderExportDialog={props => (\n                <ExportDialog\n                  project={props.project}\n                  onSaveProject={props.onSaveProject}\n                  onChangeSubscription={props.onChangeSubscription}\n                  onClose={props.onClose}\n                  automatedExporters={localAutomatedExporters}\n                  manualExporters={localManualExporters}\n                  onlineWebExporter={localOnlineWebExporter}\n                />\n              )}\n              renderGDJSDevelopmentWatcher={\n                isDev ? () => <LocalGDJSDevelopmentWatcher /> : null\n              }\n              storageProviders={storageProviders}\n              resourceMover={LocalResourceMover}\n              resourceFetcher={LocalResourceFetcher}\n              getStorageProviderOperations={getStorageProviderOperations}\n              getStorageProviderResourceOperations={\n                getStorageProviderResourceOperations\n              }\n              getStorageProvider={getStorageProvider}\n              resourceSources={localResourceSources}\n              resourceExternalEditors={localResourceExternalEditors}\n              extensionsLoader={makeExtensionsLoader({\n                gd,\n                objectsEditorService: ObjectsEditorService,\n                objectsRenderingService: ObjectsRenderingService,\n                filterExamples: !isDev,\n              })}\n              initialFileMetadataToOpen={initialFileMetadataToOpen}\n            />\n          )}\n        </ProjectStorageProviders>\n      )}\n    </Providers>\n  );\n};\n"],"names":["findGDJS","require","optionalRequire","path","fs","module","exports","findJsExtensionModules","_ref","filterExamples","onFindGDJS","then","_ref2","gdjsRoot","extensionsRoot","join","console","info","concat","Promise","resolve","reject","readdir","error","extensionFolders","filteredExtensionFolders","filter","folder","indexOf","all","map","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","err","stats","isFile","modulePaths","modulePath","loadExtension","gd","objectsEditorService","objectsRenderingService","loadAllExtensions","_","extensionModulePaths","extensionModulePath","extensionModule","rethrowException","ex","result","message","rawError","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","copyAllEmbeddedResourcesToProjectFolder","_x","_x2","_copyAllEmbeddedResourcesToProjectFolder","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","project","filesWithEmbeddedResources","projectPath","copies","_iterator3","_step3","_step3$value","hasAnyEmbeddedResourceOutsideProjectFolder","embeddedResources","_iterator4","_step4","_loop","wrap","_context2","prev","next","abrupt","dirname","getProjectFile","_createForOfIteratorHelper","values","s","n","done","value","embedded","resourceBasename","fileExtension","fileNameWithoutExtension","newFileNameWithoutExtension","resourceNewPath","_context","isOutsideProjectFolder","basename","fullPath","extname","newNameGenerator","tentativeFileName","tentativePath","existsSync","resourceName","push","promises","copyFile","stop","delegateYield","t0","t1","e","f","finish","t2","createAndMapEmbeddedResources","_step","filesWithMappedResources","Map","_iterator","_step2","_step$value","_slicedToArray","filePath","mapping","_iterator2","_step2$value","resourceKind","relPath","relative","theEmbeddedResource","createNewResource","setName","setFile","getResourcesManager","addResource","set","listTileMapEmbeddedResources","_x3","_x4","_listTileMapEmbeddedResources","_callee2","data","tileMap","dir","_iterator5","_step5","tileset","resource","_iterator6","_step6","level","_relPath","_fullPath","_isOutsideProjectFolder","_resource","_context3","readFile","sent","JSON","parse","__header__","app","defs","tilesets","isPathInProjectFolder","levels","bgRelPath","embeddedResourcesParsers","tilemap","json","remote","dialog","ResourceStoreChooser","options","onChooseResources","_jsx","ResourceStore","onChoose","chosenResourceUrl","url","newResource","setOrigin","localResourceSources","_toConsumableArray","allResourceKindsAndMetadata","kind","fileExtensions","displayName","selectLocalFileResources","_ref4","_ref3","i18n","getLastUsedPath","setLastUsedPath","properties","latestPath","browserWindow","_yield$dialog$showOpe","filePaths","lastUsedPath","hasFilesOutsideProjectFolder","parseEmbeddedResources","newToOldFilePaths","Error","multiSelection","getCurrentWindow","showOpenDialog","title","id","filters","name","extensions","defaultPath","length","some","Window","showConfirmDialog","copyAllToProjectFolder","filePathWithMapping","has","mappedResources","setMetadata","stringify","embeddedResourcesMapping","displayTab","onlyForStorageProvider","selectResourcesHeadless","renderComponent","props","Line","justifyContent","children","RaisedButton","primary","label","Trans","onClick","resources","fileMetadata","getStorageProvider","_ref6","FileToCloudProjectResourceUploader","automaticallyOpenInput","automaticallyOpenIfPossible","_ref7","electron","ipcRenderer","openAndWaitForExternalEditorWindow","editorName","externalEditorInput","externalEditorOutput","invoke","downloadAndPrepareExternalEditorBase64Resources","_callee4","resourceNames","urlsToDownload","filesToRead","resourcesManager","downloadedBlobs","resourcesToDataUrl","_context4","forEach","hasResource","getResource","getFile","isURL","isBlobURL","localFilePath","downloadUrlsToBlobs","urlContainers","onProgress","count","total","_ref5","blob","item","convertBlobToDataURL","t3","dataUrl","call","t4","_callee3","content","toString","_x5","resourceData","editWithLocalExternalEditor","_ref9","_callee5","_ref8","externalEditorName","defaultName","metadataKey","resourceManagementProps","modifiedResources","_context5","singleFrame","extraOptions","externalEditorData","readMetadata","existingMetadata","fps","isLooping","sendExternalEditorOpened","saveBlobUrlsFromExternalEditorBase64Resources","baseNameForNewResources","onFetchNewlyAddedResources","freeBlobsAndUpdateMetadata","metadata","patchExternalEditorMetadataWithResourcesNamesIfNecessary","_ref10","getName","_ref11","originalIndex","newName","newMetadata","_defineProperty","_x6","editors","createDisplayName","editDisplayName","edit","_edit","_callee6","_context6","_x7","_edit2","_callee7","_context7","_x8","_edit3","_callee8","_context8","_x9","os","getUID","userInfo","uid","global","pathPosix","posix","LocalFileSystem","_createClass","_this","_classCallCheck","_filesToDownload","getAllUrlFilesIn","pathPrefix","normalizedPathPrefix","normalize","replace","Object","keys","mkDir","mkdirsSync","dirExists","clearDir","emptyDirSync","getTempDir","tmpdir","fileNameFrom","_downloadUrlsToLocalFiles","dirNameFrom","makeAbsolute","filename","baseDirectory","isAbsolute","makeRelative","charAt","source","dest","copySync","writeToFile","file","contents","outputFileSync","readFileSync","readDir","ext","toUpperCase","output","VectorString","readdirSync","push_back","fileExists","normalizedFilePath","statSync","this","downloadUrlsToLocalFiles","G","H","render","w","B","self","QrCreator","t","c","a","b","h","u","J","r","d","text","version","O","C","g","x","lineTo","arcTo","moveTo","z","y","v","N","K","P","Math","max","min","getContext","background","fillStyle","fillRect","left","top","size","beginPath","p","q","k","m","D","E","l","floor","R","I","F","round","fill","type","colorStops","position","createLinearGradient","createRadialGradient","addColorStop","A","minVersion","maxVersion","ecLevel","radius","quiet","assign","HTMLCanvasElement","width","height","clearRect","document","createElement","appendChild","Array","put","write","j","o","S","multiply","i","charCodeAt","L","M","Q","abs","_ref$size","gdevelopTheme","React","GDevelopThemeContext","containerRef","containerElement","current","palette","secondary","firstChild","removeChild","ref","open","onExport","onClose","onRunPreviewLocally","urlWithProtocol","_jsxs","Dialog","actions","FlatButton","secondaryActions","onRequestClose","maxWidth","Text","PlaceholderLoader","ShareLink","_Fragment","QrCode","debuggerServerState","debuggerServerAddress","callbacksList","debuggerIds","localPreviewDebuggerServer","startServer","serverStartPromise","serverStartPromiseCompleted","removeAllListeners","on","event","onErrorReceived","debuggerIdIndex","splice","onConnectionClosed","onConnectionOpened","errorMessage","onConnectionErrored","address","onServerStateChanged","parsedMessage","onHandleParsedMessage","warn","send","serverStartTimeoutPromise","setTimeout","race","sendMessage","getServerState","getExistingDebuggerIds","registerCallbacks","callbacks","callbacksIndex","LocalPreviewLauncher","_React$Component","_inherits","_super","_createSuper","_len","args","_key","canDoNetworkPreview","canDoHotReload","state","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","previewBrowserWindowOptions","hotReloadsCount","hideMenuBar","alwaysOnTop","_networkPreviewSubscriptionChecker","_hotReloadSubscriptionChecker","_openPreviewBrowserWindow","_this$state","previewGameIndexHtmlPath","closePreview","windowId","_openPreviewWindow","gamePath","setState","getGameResolutionWidth","getGameResolutionHeight","useContentSize","backgroundColor","webPreferences","webSecurity","nodeIntegration","contextIsolation","getIsMenuBarHiddenInPreview","getIsAlwaysOnTopInPreview","networkPreview","serverParams","port","_checkSubscriptionForNetworkPreview","ipAddress","root","_prepareExporter","localFileSystem","fileSystem","assignIn","AbstractFileSystemJS","outputDir","exporter","Exporter","launchPreview","previewOptions","layout","externalLayout","getPreviewDebuggerServer","catch","fn","onResult","performance","now","timeFunction","previewExportOptions","PreviewExportOptions","setIsDevelopmentEnvironment","isDev","setLayoutName","setExternalLayoutName","previewDebuggerServerAddress","useWebsocketDebuggerClientWithServerAddress","includeFileHashs","getIncludeFileHashs","includeFile","hash","setIncludeFileHash","setElectronRemoteRequirePath","shouldHotReload","hotReload","setProjectDataOnlyExport","projectDataOnlyExport","setFullLoadingScreen","fullLoadingScreen","fallbackAuthor","setFallbackAuthor","username","exportProjectForPixiPreview","delete","debuggerId","command","checkUserHasSubscription","time","key","_this2","_this$state2","SubscriptionChecker","subscriptionChecker","onChangeSubscription","mode","LocalNetworkPreviewDialog","shell","localCordovaExportPipeline","packageNameWarningType","getInitialExportState","getLastCompilationDirectory","canLaunchBuild","exportState","isNavigationDisabled","renderHeader","updateExportState","Column","noMargin","ExplanationHeader","LocalFolderPicker","onChange","setLastCompilationDirectory","fullWidth","renderLaunchButtonLabel","prepareExporter","context","launchExport","_launchExport","exportOptions","ExportOptions","setTarget","exportWholePixiProject","urlFiles","launchResourcesDownload","_launchResourcesDownload","updateStepProgress","throwIfAnyError","launchCompression","exportOutput","renderDoneFooter","openExportFolder","openPath","DoneFooter","renderGameButton","localElectronExportPipeline","localHTML5ExportPipeline","styles","container","display","alignItems","button","marginLeft","textField","flex","onChooseFolder","_yield$dialog$showSav","showSaveDialog","style","_objectSpread","undefined","TextField","margin","translatableHintText","lazyRequireArchiver","optionalLazyRequire","archiveLocalFolder","outputFilename","sizeLimit","archiver","createWriteStream","archive","zlib","fileSize","pointer","log","roundFileSizeInMb","pipe","directory","finalize","localFacebookInstantGamesExportPipeline","archiveOutputFilename","getPath","LocalFilePicker","temporaryOutputDir","uploadLocalFile","uploadOptions","stepCurrentProgress","stepMaxProgress","localOnlineCordovaExportPipeline","onlineBuildType","limitedBuilds","targets","keystore","signingDialogOpen","errored","exportStep","includes","SetupExportHeader","archiveOutputDir","launchUpload","outputFile","getBuildFileUploadOptions","launchOnlineBuild","authenticatedUser","uploadBucketKey","gameId","getAuthorizationHeader","firebaseUser","buildCordovaAndroid","localOnlineElectronExportPipeline","buildElectron","localOnlineWebExportPipeline","renderCustomStepsProgress","build","onSaveProject","OnlineGameLink","buildWeb","localOnlineWebExporter","onlineWebExporter","exportPipeline","localAutomatedExporters","html5Exporter","onlineCordovaExporter","onlineElectronExporter","facebookInstantGamesExporter","localManualExporters","cordovaExporter","electronExporter","useIPCEventListener","ipcEvent","callback","shouldApply","handler","eventArgs","removeListener","useAppEventListener","_len2","_key2","isMainWindow","windowTitle","lowercaseTitle","toLowerCase","startsWith","extraCallbacks","recentProjectFiles","shortcutMap","onClosePreview","language","_React$useState","_React$useState2","isFocusedOnMainWindow","setIsFocusedOnMainWindow","_React$useState3","_React$useState4","focusedWindowId","setFocusedWindowId","closePreviewWindow","useShortcutToClosePreviewWindow","PreferencesContext","window","onChooseProject","onOpenRecentFile","onSaveProjectAs","onCloseProject","onCloseApp","onExportProject","onCreateProject","onCreateBlank","onOpenProjectManager","onOpenHomePage","onOpenDebugger","onOpenAbout","onOpenPreferences","onOpenLanguage","onOpenProfile","onOpenGamesDashboard","setElectronUpdateStatus","buildMainMenuDeclarativeTemplate","isApplicationTopLevelMenu","useCommandWithOptions","generateOptions","fileIdentifier","makeLocalEventsFunctionCodeWriter","onWriteFile","mkdir","code","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","writeFile","writeBehaviorCode","behaviorCodeNamespace","writeObjectCode","objectCodeNamespace","writeJSONFile","object","filepath","ensureDir","stringifyException","LocalEventsFunctionsExtensionWriter","chooseEventsFunctionExtensionFile","extensionName","writeEventsFunctionsExtension","extension","serializedObject","serializeToJSObject","chooseCustomObjectFile","objectName","writeCustomObject","customObject","exportedObject","clone","setTags","getVariables","clear","getEffects","getAllBehaviorNames","toJSArray","removeBehavior","LocalEventsFunctionsExtensionOpener","readEventsFunctionExtensionFile","encoding","dataObject","readJSONFile","onOpenWithPicker","onOpen","unsplit","getReferencePartialObject","referencePath","isReferenceMagicPropertyName","maxUnsplitDepth","getAutoSaveCreationDate","compareLastModified","autoSavePath","autoSavedTime","saveTime","mtime","getTime","onGetAutoSave","SvgIcon","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","lazyRequireGlob","scanForNewResources","createResource","glob","allExtensions","allFiles","filesToCheck","filePathsNotInResources","files","findFilesNotInResources","mapVector","relativeFilePath","applyResourceDefaults","internalName","renderIcon","Computer","fontSize","getFileMetadataFromAppArguments","appArguments","POSITIONAL_ARGUMENTS_KEY","getProjectLocation","renderNewProjectSaveAsLocationChooser","createOperations","onChooseSaveProjectAsLocation","onAutoSaveProject","getOpenErrorMessage","getWriteErrorMessage","createResourceOperations","updateInterface","cleanUserSelectionOfResources","informUser","click","resourceFilePath","getLocalResourceFullPath","showItemInFolder","locateResourceFile","openResourceFile","clipboard","writeText","copyResourceFilePath","submenu","_click","getAllResourceNames","getResourceFilePathStatus","removeResource","removeAllResourcesWithInvalidPath","LocalGDJSDevelopmentWatcher","shouldWatch","useGDJSDevelopmentWatcher","generateUnusedFilepath","basePath","alreadyUsedFilePaths","filenameWithoutExtension","downloadBlobToLocalFile","blobUrl","response","arrayBuffer","axios","responseType","moveUrlResourcesToLocalFiles","allResourceNames","resourcesToFetchNames","tokenForPrivateGameTemplateAuthorization","baseAssetsPath","downloadedFilePaths","erroredResources","fetchedResourcesCount","resourceFile","fetchTokenForPrivateGameTemplateAuthorizationIfNeeded","allResourcePaths","Set","PromisePool","for","process","_parseLocalFilePathOr","downloadedFilePath","_downloadedFilePath","parseLocalFilePathOrExtensionFromMetadata","sanitizeFilename","isProductAuthorizedResourceUrl","extractFilenameWithExtensionFromProductAuthorizedUrl","isPublicAssetResourceUrl","extractFilenameWithExtensionFromPublicAssetResourceUrl","extractFilenameFromProjectResourceUrl","add","retryIfFailed","times","resourceUrl","encodedUrl","URL","isPrivateGameTemplateResourceAuthorizedUrl","href","searchParams","processByChunk","array","transformItem","isChunkTooBig","processChunk","currentItemIndex","nextChunk","mappedItem","readLocalFileToArrayBuffer","buffer","slice","byteOffset","byteLength","extensionToMimeType","aac","wav","mp3","ogg","png","jpg","jpeg","webp","ttf","otf","mp4","webm","xml","gz","js","readLocalFileToFile","extensionWithoutLeadingDot","File","moveAllLocalResourcesToCloudResources","oldFileMetadata","newFileMetadata","newCloudProjectId","allResourcesToUpload","alreadyDoneCount","checkIfIsGDevelopCloudBucketUrl","Boolean","getResourcesToUpload","_transformItem","resourceAbsolutePath","resourceAndFilesChunk","reduce","_processChunk","resourceAndFilesToUpload","uploadedProjectResourceFiles","getCredentialsForCloudProject","uploadProjectResourceFiles","index","movers","_movers","LocalFileStorageProvider","_2","ProjectResourcesCopier","copyAllResourcesTo","CloudStorageProvider","UrlStorageProvider","moveUrlResourcesToCloudProject","LocalResourceMover","moveAllProjectResources","_moveAllProjectResources","oldStorageProvider","newStorageProvider","mover","fetchers","_fetchers","moveUrlResourcesToCloudFilesIfPrivate","fetchRelativeResourcesToFullUrls","LocalResourceFetcher","fetchAllProjectResources","_fetchAllProjectResources","storageProvider","fetcher","create","authentication","setUpContextMenu","getArguments","Providers","disableCheckForUpdates","makeEventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","ProjectStorageProviders","storageProviders","defaultStorageProvider","getStorageProviderOperations","getStorageProviderResourceOperations","initialFileMetadataToOpen","MainFrame","renderMainMenu","ElectronMainMenu","renderPreviewLauncher","renderExportDialog","ExportDialog","automatedExporters","manualExporters","renderGDJSDevelopmentWatcher","resourceMover","resourceFetcher","resourceSources","resourceExternalEditors","localResourceExternalEditors","extensionsLoader","makeExtensionsLoader","ObjectsEditorService","ObjectsRenderingService"],"sourceRoot":""}